

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sun May 04 18:56:46 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    29   000000                     
    30                           ; Generated 17/01/2025 GMT
    31                           ; 
    32                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F4620 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64   000FE0                     bsr             equ	4064
    65   000FE9                     fsr0            equ	4073
    66   000FEA                     fsr0h           equ	4074
    67   000FE9                     fsr0l           equ	4073
    68   000FE1                     fsr1            equ	4065
    69   000FE2                     fsr1h           equ	4066
    70   000FE1                     fsr1l           equ	4065
    71   000FD9                     fsr2            equ	4057
    72   000FDA                     fsr2h           equ	4058
    73   000FD9                     fsr2l           equ	4057
    74   000FEF                     indf0           equ	4079
    75   000FE7                     indf1           equ	4071
    76   000FDF                     indf2           equ	4063
    77   000FF2                     intcon          equ	4082
    78   000000                     nvmcon          equ	0
    79   000FF9                     pcl             equ	4089
    80   000FFA                     pclath          equ	4090
    81   000FFB                     pclatu          equ	4091
    82   000FEB                     plusw0          equ	4075
    83   000FE3                     plusw1          equ	4067
    84   000FDB                     plusw2          equ	4059
    85   000FED                     postdec0        equ	4077
    86   000FE5                     postdec1        equ	4069
    87   000FDD                     postdec2        equ	4061
    88   000FEE                     postinc0        equ	4078
    89   000FE6                     postinc1        equ	4070
    90   000FDE                     postinc2        equ	4062
    91   000FEC                     preinc0         equ	4076
    92   000FE4                     preinc1         equ	4068
    93   000FDC                     preinc2         equ	4060
    94   000FF3                     prod            equ	4083
    95   000FF4                     prodh           equ	4084
    96   000FF3                     prodl           equ	4083
    97   000FD8                     status          equ	4056
    98   000FF5                     tablat          equ	4085
    99   000FF6                     tblptr          equ	4086
   100   000FF7                     tblptrh         equ	4087
   101   000FF6                     tblptrl         equ	4086
   102   000FF8                     tblptru         equ	4088
   103   000FFD                     tosl            equ	4093
   104   000FE8                     wreg            equ	4072
   105   000F80                     PORTA           equ	3968	;# 
   106   000F81                     PORTB           equ	3969	;# 
   107   000F82                     PORTC           equ	3970	;# 
   108   000F83                     PORTD           equ	3971	;# 
   109   000F84                     PORTE           equ	3972	;# 
   110   000F89                     LATA            equ	3977	;# 
   111   000F8A                     LATB            equ	3978	;# 
   112   000F8B                     LATC            equ	3979	;# 
   113   000F8C                     LATD            equ	3980	;# 
   114   000F8D                     LATE            equ	3981	;# 
   115   000F92                     TRISA           equ	3986	;# 
   116   000F92                     DDRA            equ	3986	;# 
   117   000F93                     TRISB           equ	3987	;# 
   118   000F93                     DDRB            equ	3987	;# 
   119   000F94                     TRISC           equ	3988	;# 
   120   000F94                     DDRC            equ	3988	;# 
   121   000F95                     TRISD           equ	3989	;# 
   122   000F95                     DDRD            equ	3989	;# 
   123   000F96                     TRISE           equ	3990	;# 
   124   000F96                     DDRE            equ	3990	;# 
   125   000F9B                     OSCTUNE         equ	3995	;# 
   126   000F9D                     PIE1            equ	3997	;# 
   127   000F9E                     PIR1            equ	3998	;# 
   128   000F9F                     IPR1            equ	3999	;# 
   129   000FA0                     PIE2            equ	4000	;# 
   130   000FA1                     PIR2            equ	4001	;# 
   131   000FA2                     IPR2            equ	4002	;# 
   132   000FA6                     EECON1          equ	4006	;# 
   133   000FA7                     EECON2          equ	4007	;# 
   134   000FA8                     EEDATA          equ	4008	;# 
   135   000FA9                     EEADR           equ	4009	;# 
   136   000FAA                     EEADRH          equ	4010	;# 
   137   000FAB                     RCSTA           equ	4011	;# 
   138   000FAB                     RCSTA1          equ	4011	;# 
   139   000FAC                     TXSTA           equ	4012	;# 
   140   000FAC                     TXSTA1          equ	4012	;# 
   141   000FAD                     TXREG           equ	4013	;# 
   142   000FAD                     TXREG1          equ	4013	;# 
   143   000FAE                     RCREG           equ	4014	;# 
   144   000FAE                     RCREG1          equ	4014	;# 
   145   000FAF                     SPBRG           equ	4015	;# 
   146   000FAF                     SPBRG1          equ	4015	;# 
   147   000FB0                     SPBRGH          equ	4016	;# 
   148   000FB1                     T3CON           equ	4017	;# 
   149   000FB2                     TMR3            equ	4018	;# 
   150   000FB2                     TMR3L           equ	4018	;# 
   151   000FB3                     TMR3H           equ	4019	;# 
   152   000FB4                     CMCON           equ	4020	;# 
   153   000FB5                     CVRCON          equ	4021	;# 
   154   000FB6                     ECCP1AS         equ	4022	;# 
   155   000FB7                     PWM1CON         equ	4023	;# 
   156   000FB8                     BAUDCON         equ	4024	;# 
   157   000FB8                     BAUDCTL         equ	4024	;# 
   158   000FBA                     CCP2CON         equ	4026	;# 
   159   000FBB                     CCPR2           equ	4027	;# 
   160   000FBB                     CCPR2L          equ	4027	;# 
   161   000FBC                     CCPR2H          equ	4028	;# 
   162   000FBD                     CCP1CON         equ	4029	;# 
   163   000FBE                     CCPR1           equ	4030	;# 
   164   000FBE                     CCPR1L          equ	4030	;# 
   165   000FBF                     CCPR1H          equ	4031	;# 
   166   000FC0                     ADCON2          equ	4032	;# 
   167   000FC1                     ADCON1          equ	4033	;# 
   168   000FC2                     ADCON0          equ	4034	;# 
   169   000FC3                     ADRES           equ	4035	;# 
   170   000FC3                     ADRESL          equ	4035	;# 
   171   000FC4                     ADRESH          equ	4036	;# 
   172   000FC5                     SSPCON2         equ	4037	;# 
   173   000FC6                     SSPCON1         equ	4038	;# 
   174   000FC7                     SSPSTAT         equ	4039	;# 
   175   000FC8                     SSPADD          equ	4040	;# 
   176   000FC9                     SSPBUF          equ	4041	;# 
   177   000FCA                     T2CON           equ	4042	;# 
   178   000FCB                     PR2             equ	4043	;# 
   179   000FCB                     MEMCON          equ	4043	;# 
   180   000FCC                     TMR2            equ	4044	;# 
   181   000FCD                     T1CON           equ	4045	;# 
   182   000FCE                     TMR1            equ	4046	;# 
   183   000FCE                     TMR1L           equ	4046	;# 
   184   000FCF                     TMR1H           equ	4047	;# 
   185   000FD0                     RCON            equ	4048	;# 
   186   000FD1                     WDTCON          equ	4049	;# 
   187   000FD2                     HLVDCON         equ	4050	;# 
   188   000FD2                     LVDCON          equ	4050	;# 
   189   000FD3                     OSCCON          equ	4051	;# 
   190   000FD5                     T0CON           equ	4053	;# 
   191   000FD6                     TMR0            equ	4054	;# 
   192   000FD6                     TMR0L           equ	4054	;# 
   193   000FD7                     TMR0H           equ	4055	;# 
   194   000FD8                     STATUS          equ	4056	;# 
   195   000FD9                     FSR2            equ	4057	;# 
   196   000FD9                     FSR2L           equ	4057	;# 
   197   000FDA                     FSR2H           equ	4058	;# 
   198   000FDB                     PLUSW2          equ	4059	;# 
   199   000FDC                     PREINC2         equ	4060	;# 
   200   000FDD                     POSTDEC2        equ	4061	;# 
   201   000FDE                     POSTINC2        equ	4062	;# 
   202   000FDF                     INDF2           equ	4063	;# 
   203   000FE0                     BSR             equ	4064	;# 
   204   000FE1                     FSR1            equ	4065	;# 
   205   000FE1                     FSR1L           equ	4065	;# 
   206   000FE2                     FSR1H           equ	4066	;# 
   207   000FE3                     PLUSW1          equ	4067	;# 
   208   000FE4                     PREINC1         equ	4068	;# 
   209   000FE5                     POSTDEC1        equ	4069	;# 
   210   000FE6                     POSTINC1        equ	4070	;# 
   211   000FE7                     INDF1           equ	4071	;# 
   212   000FE8                     WREG            equ	4072	;# 
   213   000FE9                     FSR0            equ	4073	;# 
   214   000FE9                     FSR0L           equ	4073	;# 
   215   000FEA                     FSR0H           equ	4074	;# 
   216   000FEB                     PLUSW0          equ	4075	;# 
   217   000FEC                     PREINC0         equ	4076	;# 
   218   000FED                     POSTDEC0        equ	4077	;# 
   219   000FEE                     POSTINC0        equ	4078	;# 
   220   000FEF                     INDF0           equ	4079	;# 
   221   000FF0                     INTCON3         equ	4080	;# 
   222   000FF1                     INTCON2         equ	4081	;# 
   223   000FF2                     INTCON          equ	4082	;# 
   224   000FF3                     PROD            equ	4083	;# 
   225   000FF3                     PRODL           equ	4083	;# 
   226   000FF4                     PRODH           equ	4084	;# 
   227   000FF5                     TABLAT          equ	4085	;# 
   228   000FF6                     TBLPTR          equ	4086	;# 
   229   000FF6                     TBLPTRL         equ	4086	;# 
   230   000FF7                     TBLPTRH         equ	4087	;# 
   231   000FF8                     TBLPTRU         equ	4088	;# 
   232   000FF9                     PCLAT           equ	4089	;# 
   233   000FF9                     PC              equ	4089	;# 
   234   000FF9                     PCL             equ	4089	;# 
   235   000FFA                     PCLATH          equ	4090	;# 
   236   000FFB                     PCLATU          equ	4091	;# 
   237   000FFC                     STKPTR          equ	4092	;# 
   238   000FFD                     TOS             equ	4093	;# 
   239   000FFD                     TOSL            equ	4093	;# 
   240   000FFE                     TOSH            equ	4094	;# 
   241   000FFF                     TOSU            equ	4095	;# 
   242   000F80                     PORTA           equ	3968	;# 
   243   000F81                     PORTB           equ	3969	;# 
   244   000F82                     PORTC           equ	3970	;# 
   245   000F83                     PORTD           equ	3971	;# 
   246   000F84                     PORTE           equ	3972	;# 
   247   000F89                     LATA            equ	3977	;# 
   248   000F8A                     LATB            equ	3978	;# 
   249   000F8B                     LATC            equ	3979	;# 
   250   000F8C                     LATD            equ	3980	;# 
   251   000F8D                     LATE            equ	3981	;# 
   252   000F92                     TRISA           equ	3986	;# 
   253   000F92                     DDRA            equ	3986	;# 
   254   000F93                     TRISB           equ	3987	;# 
   255   000F93                     DDRB            equ	3987	;# 
   256   000F94                     TRISC           equ	3988	;# 
   257   000F94                     DDRC            equ	3988	;# 
   258   000F95                     TRISD           equ	3989	;# 
   259   000F95                     DDRD            equ	3989	;# 
   260   000F96                     TRISE           equ	3990	;# 
   261   000F96                     DDRE            equ	3990	;# 
   262   000F9B                     OSCTUNE         equ	3995	;# 
   263   000F9D                     PIE1            equ	3997	;# 
   264   000F9E                     PIR1            equ	3998	;# 
   265   000F9F                     IPR1            equ	3999	;# 
   266   000FA0                     PIE2            equ	4000	;# 
   267   000FA1                     PIR2            equ	4001	;# 
   268   000FA2                     IPR2            equ	4002	;# 
   269   000FA6                     EECON1          equ	4006	;# 
   270   000FA7                     EECON2          equ	4007	;# 
   271   000FA8                     EEDATA          equ	4008	;# 
   272   000FA9                     EEADR           equ	4009	;# 
   273   000FAA                     EEADRH          equ	4010	;# 
   274   000FAB                     RCSTA           equ	4011	;# 
   275   000FAB                     RCSTA1          equ	4011	;# 
   276   000FAC                     TXSTA           equ	4012	;# 
   277   000FAC                     TXSTA1          equ	4012	;# 
   278   000FAD                     TXREG           equ	4013	;# 
   279   000FAD                     TXREG1          equ	4013	;# 
   280   000FAE                     RCREG           equ	4014	;# 
   281   000FAE                     RCREG1          equ	4014	;# 
   282   000FAF                     SPBRG           equ	4015	;# 
   283   000FAF                     SPBRG1          equ	4015	;# 
   284   000FB0                     SPBRGH          equ	4016	;# 
   285   000FB1                     T3CON           equ	4017	;# 
   286   000FB2                     TMR3            equ	4018	;# 
   287   000FB2                     TMR3L           equ	4018	;# 
   288   000FB3                     TMR3H           equ	4019	;# 
   289   000FB4                     CMCON           equ	4020	;# 
   290   000FB5                     CVRCON          equ	4021	;# 
   291   000FB6                     ECCP1AS         equ	4022	;# 
   292   000FB7                     PWM1CON         equ	4023	;# 
   293   000FB8                     BAUDCON         equ	4024	;# 
   294   000FB8                     BAUDCTL         equ	4024	;# 
   295   000FBA                     CCP2CON         equ	4026	;# 
   296   000FBB                     CCPR2           equ	4027	;# 
   297   000FBB                     CCPR2L          equ	4027	;# 
   298   000FBC                     CCPR2H          equ	4028	;# 
   299   000FBD                     CCP1CON         equ	4029	;# 
   300   000FBE                     CCPR1           equ	4030	;# 
   301   000FBE                     CCPR1L          equ	4030	;# 
   302   000FBF                     CCPR1H          equ	4031	;# 
   303   000FC0                     ADCON2          equ	4032	;# 
   304   000FC1                     ADCON1          equ	4033	;# 
   305   000FC2                     ADCON0          equ	4034	;# 
   306   000FC3                     ADRES           equ	4035	;# 
   307   000FC3                     ADRESL          equ	4035	;# 
   308   000FC4                     ADRESH          equ	4036	;# 
   309   000FC5                     SSPCON2         equ	4037	;# 
   310   000FC6                     SSPCON1         equ	4038	;# 
   311   000FC7                     SSPSTAT         equ	4039	;# 
   312   000FC8                     SSPADD          equ	4040	;# 
   313   000FC9                     SSPBUF          equ	4041	;# 
   314   000FCA                     T2CON           equ	4042	;# 
   315   000FCB                     PR2             equ	4043	;# 
   316   000FCB                     MEMCON          equ	4043	;# 
   317   000FCC                     TMR2            equ	4044	;# 
   318   000FCD                     T1CON           equ	4045	;# 
   319   000FCE                     TMR1            equ	4046	;# 
   320   000FCE                     TMR1L           equ	4046	;# 
   321   000FCF                     TMR1H           equ	4047	;# 
   322   000FD0                     RCON            equ	4048	;# 
   323   000FD1                     WDTCON          equ	4049	;# 
   324   000FD2                     HLVDCON         equ	4050	;# 
   325   000FD2                     LVDCON          equ	4050	;# 
   326   000FD3                     OSCCON          equ	4051	;# 
   327   000FD5                     T0CON           equ	4053	;# 
   328   000FD6                     TMR0            equ	4054	;# 
   329   000FD6                     TMR0L           equ	4054	;# 
   330   000FD7                     TMR0H           equ	4055	;# 
   331   000FD8                     STATUS          equ	4056	;# 
   332   000FD9                     FSR2            equ	4057	;# 
   333   000FD9                     FSR2L           equ	4057	;# 
   334   000FDA                     FSR2H           equ	4058	;# 
   335   000FDB                     PLUSW2          equ	4059	;# 
   336   000FDC                     PREINC2         equ	4060	;# 
   337   000FDD                     POSTDEC2        equ	4061	;# 
   338   000FDE                     POSTINC2        equ	4062	;# 
   339   000FDF                     INDF2           equ	4063	;# 
   340   000FE0                     BSR             equ	4064	;# 
   341   000FE1                     FSR1            equ	4065	;# 
   342   000FE1                     FSR1L           equ	4065	;# 
   343   000FE2                     FSR1H           equ	4066	;# 
   344   000FE3                     PLUSW1          equ	4067	;# 
   345   000FE4                     PREINC1         equ	4068	;# 
   346   000FE5                     POSTDEC1        equ	4069	;# 
   347   000FE6                     POSTINC1        equ	4070	;# 
   348   000FE7                     INDF1           equ	4071	;# 
   349   000FE8                     WREG            equ	4072	;# 
   350   000FE9                     FSR0            equ	4073	;# 
   351   000FE9                     FSR0L           equ	4073	;# 
   352   000FEA                     FSR0H           equ	4074	;# 
   353   000FEB                     PLUSW0          equ	4075	;# 
   354   000FEC                     PREINC0         equ	4076	;# 
   355   000FED                     POSTDEC0        equ	4077	;# 
   356   000FEE                     POSTINC0        equ	4078	;# 
   357   000FEF                     INDF0           equ	4079	;# 
   358   000FF0                     INTCON3         equ	4080	;# 
   359   000FF1                     INTCON2         equ	4081	;# 
   360   000FF2                     INTCON          equ	4082	;# 
   361   000FF3                     PROD            equ	4083	;# 
   362   000FF3                     PRODL           equ	4083	;# 
   363   000FF4                     PRODH           equ	4084	;# 
   364   000FF5                     TABLAT          equ	4085	;# 
   365   000FF6                     TBLPTR          equ	4086	;# 
   366   000FF6                     TBLPTRL         equ	4086	;# 
   367   000FF7                     TBLPTRH         equ	4087	;# 
   368   000FF8                     TBLPTRU         equ	4088	;# 
   369   000FF9                     PCLAT           equ	4089	;# 
   370   000FF9                     PC              equ	4089	;# 
   371   000FF9                     PCL             equ	4089	;# 
   372   000FFA                     PCLATH          equ	4090	;# 
   373   000FFB                     PCLATU          equ	4091	;# 
   374   000FFC                     STKPTR          equ	4092	;# 
   375   000FFD                     TOS             equ	4093	;# 
   376   000FFD                     TOSL            equ	4093	;# 
   377   000FFE                     TOSH            equ	4094	;# 
   378   000FFF                     TOSU            equ	4095	;# 
   379   000F80                     PORTA           equ	3968	;# 
   380   000F81                     PORTB           equ	3969	;# 
   381   000F82                     PORTC           equ	3970	;# 
   382   000F83                     PORTD           equ	3971	;# 
   383   000F84                     PORTE           equ	3972	;# 
   384   000F89                     LATA            equ	3977	;# 
   385   000F8A                     LATB            equ	3978	;# 
   386   000F8B                     LATC            equ	3979	;# 
   387   000F8C                     LATD            equ	3980	;# 
   388   000F8D                     LATE            equ	3981	;# 
   389   000F92                     TRISA           equ	3986	;# 
   390   000F92                     DDRA            equ	3986	;# 
   391   000F93                     TRISB           equ	3987	;# 
   392   000F93                     DDRB            equ	3987	;# 
   393   000F94                     TRISC           equ	3988	;# 
   394   000F94                     DDRC            equ	3988	;# 
   395   000F95                     TRISD           equ	3989	;# 
   396   000F95                     DDRD            equ	3989	;# 
   397   000F96                     TRISE           equ	3990	;# 
   398   000F96                     DDRE            equ	3990	;# 
   399   000F9B                     OSCTUNE         equ	3995	;# 
   400   000F9D                     PIE1            equ	3997	;# 
   401   000F9E                     PIR1            equ	3998	;# 
   402   000F9F                     IPR1            equ	3999	;# 
   403   000FA0                     PIE2            equ	4000	;# 
   404   000FA1                     PIR2            equ	4001	;# 
   405   000FA2                     IPR2            equ	4002	;# 
   406   000FA6                     EECON1          equ	4006	;# 
   407   000FA7                     EECON2          equ	4007	;# 
   408   000FA8                     EEDATA          equ	4008	;# 
   409   000FA9                     EEADR           equ	4009	;# 
   410   000FAA                     EEADRH          equ	4010	;# 
   411   000FAB                     RCSTA           equ	4011	;# 
   412   000FAB                     RCSTA1          equ	4011	;# 
   413   000FAC                     TXSTA           equ	4012	;# 
   414   000FAC                     TXSTA1          equ	4012	;# 
   415   000FAD                     TXREG           equ	4013	;# 
   416   000FAD                     TXREG1          equ	4013	;# 
   417   000FAE                     RCREG           equ	4014	;# 
   418   000FAE                     RCREG1          equ	4014	;# 
   419   000FAF                     SPBRG           equ	4015	;# 
   420   000FAF                     SPBRG1          equ	4015	;# 
   421   000FB0                     SPBRGH          equ	4016	;# 
   422   000FB1                     T3CON           equ	4017	;# 
   423   000FB2                     TMR3            equ	4018	;# 
   424   000FB2                     TMR3L           equ	4018	;# 
   425   000FB3                     TMR3H           equ	4019	;# 
   426   000FB4                     CMCON           equ	4020	;# 
   427   000FB5                     CVRCON          equ	4021	;# 
   428   000FB6                     ECCP1AS         equ	4022	;# 
   429   000FB7                     PWM1CON         equ	4023	;# 
   430   000FB8                     BAUDCON         equ	4024	;# 
   431   000FB8                     BAUDCTL         equ	4024	;# 
   432   000FBA                     CCP2CON         equ	4026	;# 
   433   000FBB                     CCPR2           equ	4027	;# 
   434   000FBB                     CCPR2L          equ	4027	;# 
   435   000FBC                     CCPR2H          equ	4028	;# 
   436   000FBD                     CCP1CON         equ	4029	;# 
   437   000FBE                     CCPR1           equ	4030	;# 
   438   000FBE                     CCPR1L          equ	4030	;# 
   439   000FBF                     CCPR1H          equ	4031	;# 
   440   000FC0                     ADCON2          equ	4032	;# 
   441   000FC1                     ADCON1          equ	4033	;# 
   442   000FC2                     ADCON0          equ	4034	;# 
   443   000FC3                     ADRES           equ	4035	;# 
   444   000FC3                     ADRESL          equ	4035	;# 
   445   000FC4                     ADRESH          equ	4036	;# 
   446   000FC5                     SSPCON2         equ	4037	;# 
   447   000FC6                     SSPCON1         equ	4038	;# 
   448   000FC7                     SSPSTAT         equ	4039	;# 
   449   000FC8                     SSPADD          equ	4040	;# 
   450   000FC9                     SSPBUF          equ	4041	;# 
   451   000FCA                     T2CON           equ	4042	;# 
   452   000FCB                     PR2             equ	4043	;# 
   453   000FCB                     MEMCON          equ	4043	;# 
   454   000FCC                     TMR2            equ	4044	;# 
   455   000FCD                     T1CON           equ	4045	;# 
   456   000FCE                     TMR1            equ	4046	;# 
   457   000FCE                     TMR1L           equ	4046	;# 
   458   000FCF                     TMR1H           equ	4047	;# 
   459   000FD0                     RCON            equ	4048	;# 
   460   000FD1                     WDTCON          equ	4049	;# 
   461   000FD2                     HLVDCON         equ	4050	;# 
   462   000FD2                     LVDCON          equ	4050	;# 
   463   000FD3                     OSCCON          equ	4051	;# 
   464   000FD5                     T0CON           equ	4053	;# 
   465   000FD6                     TMR0            equ	4054	;# 
   466   000FD6                     TMR0L           equ	4054	;# 
   467   000FD7                     TMR0H           equ	4055	;# 
   468   000FD8                     STATUS          equ	4056	;# 
   469   000FD9                     FSR2            equ	4057	;# 
   470   000FD9                     FSR2L           equ	4057	;# 
   471   000FDA                     FSR2H           equ	4058	;# 
   472   000FDB                     PLUSW2          equ	4059	;# 
   473   000FDC                     PREINC2         equ	4060	;# 
   474   000FDD                     POSTDEC2        equ	4061	;# 
   475   000FDE                     POSTINC2        equ	4062	;# 
   476   000FDF                     INDF2           equ	4063	;# 
   477   000FE0                     BSR             equ	4064	;# 
   478   000FE1                     FSR1            equ	4065	;# 
   479   000FE1                     FSR1L           equ	4065	;# 
   480   000FE2                     FSR1H           equ	4066	;# 
   481   000FE3                     PLUSW1          equ	4067	;# 
   482   000FE4                     PREINC1         equ	4068	;# 
   483   000FE5                     POSTDEC1        equ	4069	;# 
   484   000FE6                     POSTINC1        equ	4070	;# 
   485   000FE7                     INDF1           equ	4071	;# 
   486   000FE8                     WREG            equ	4072	;# 
   487   000FE9                     FSR0            equ	4073	;# 
   488   000FE9                     FSR0L           equ	4073	;# 
   489   000FEA                     FSR0H           equ	4074	;# 
   490   000FEB                     PLUSW0          equ	4075	;# 
   491   000FEC                     PREINC0         equ	4076	;# 
   492   000FED                     POSTDEC0        equ	4077	;# 
   493   000FEE                     POSTINC0        equ	4078	;# 
   494   000FEF                     INDF0           equ	4079	;# 
   495   000FF0                     INTCON3         equ	4080	;# 
   496   000FF1                     INTCON2         equ	4081	;# 
   497   000FF2                     INTCON          equ	4082	;# 
   498   000FF3                     PROD            equ	4083	;# 
   499   000FF3                     PRODL           equ	4083	;# 
   500   000FF4                     PRODH           equ	4084	;# 
   501   000FF5                     TABLAT          equ	4085	;# 
   502   000FF6                     TBLPTR          equ	4086	;# 
   503   000FF6                     TBLPTRL         equ	4086	;# 
   504   000FF7                     TBLPTRH         equ	4087	;# 
   505   000FF8                     TBLPTRU         equ	4088	;# 
   506   000FF9                     PCLAT           equ	4089	;# 
   507   000FF9                     PC              equ	4089	;# 
   508   000FF9                     PCL             equ	4089	;# 
   509   000FFA                     PCLATH          equ	4090	;# 
   510   000FFB                     PCLATU          equ	4091	;# 
   511   000FFC                     STKPTR          equ	4092	;# 
   512   000FFD                     TOS             equ	4093	;# 
   513   000FFD                     TOSL            equ	4093	;# 
   514   000FFE                     TOSH            equ	4094	;# 
   515   000FFF                     TOSU            equ	4095	;# 
   516   000F80                     PORTA           equ	3968	;# 
   517   000F81                     PORTB           equ	3969	;# 
   518   000F82                     PORTC           equ	3970	;# 
   519   000F83                     PORTD           equ	3971	;# 
   520   000F84                     PORTE           equ	3972	;# 
   521   000F89                     LATA            equ	3977	;# 
   522   000F8A                     LATB            equ	3978	;# 
   523   000F8B                     LATC            equ	3979	;# 
   524   000F8C                     LATD            equ	3980	;# 
   525   000F8D                     LATE            equ	3981	;# 
   526   000F92                     TRISA           equ	3986	;# 
   527   000F92                     DDRA            equ	3986	;# 
   528   000F93                     TRISB           equ	3987	;# 
   529   000F93                     DDRB            equ	3987	;# 
   530   000F94                     TRISC           equ	3988	;# 
   531   000F94                     DDRC            equ	3988	;# 
   532   000F95                     TRISD           equ	3989	;# 
   533   000F95                     DDRD            equ	3989	;# 
   534   000F96                     TRISE           equ	3990	;# 
   535   000F96                     DDRE            equ	3990	;# 
   536   000F9B                     OSCTUNE         equ	3995	;# 
   537   000F9D                     PIE1            equ	3997	;# 
   538   000F9E                     PIR1            equ	3998	;# 
   539   000F9F                     IPR1            equ	3999	;# 
   540   000FA0                     PIE2            equ	4000	;# 
   541   000FA1                     PIR2            equ	4001	;# 
   542   000FA2                     IPR2            equ	4002	;# 
   543   000FA6                     EECON1          equ	4006	;# 
   544   000FA7                     EECON2          equ	4007	;# 
   545   000FA8                     EEDATA          equ	4008	;# 
   546   000FA9                     EEADR           equ	4009	;# 
   547   000FAA                     EEADRH          equ	4010	;# 
   548   000FAB                     RCSTA           equ	4011	;# 
   549   000FAB                     RCSTA1          equ	4011	;# 
   550   000FAC                     TXSTA           equ	4012	;# 
   551   000FAC                     TXSTA1          equ	4012	;# 
   552   000FAD                     TXREG           equ	4013	;# 
   553   000FAD                     TXREG1          equ	4013	;# 
   554   000FAE                     RCREG           equ	4014	;# 
   555   000FAE                     RCREG1          equ	4014	;# 
   556   000FAF                     SPBRG           equ	4015	;# 
   557   000FAF                     SPBRG1          equ	4015	;# 
   558   000FB0                     SPBRGH          equ	4016	;# 
   559   000FB1                     T3CON           equ	4017	;# 
   560   000FB2                     TMR3            equ	4018	;# 
   561   000FB2                     TMR3L           equ	4018	;# 
   562   000FB3                     TMR3H           equ	4019	;# 
   563   000FB4                     CMCON           equ	4020	;# 
   564   000FB5                     CVRCON          equ	4021	;# 
   565   000FB6                     ECCP1AS         equ	4022	;# 
   566   000FB7                     PWM1CON         equ	4023	;# 
   567   000FB8                     BAUDCON         equ	4024	;# 
   568   000FB8                     BAUDCTL         equ	4024	;# 
   569   000FBA                     CCP2CON         equ	4026	;# 
   570   000FBB                     CCPR2           equ	4027	;# 
   571   000FBB                     CCPR2L          equ	4027	;# 
   572   000FBC                     CCPR2H          equ	4028	;# 
   573   000FBD                     CCP1CON         equ	4029	;# 
   574   000FBE                     CCPR1           equ	4030	;# 
   575   000FBE                     CCPR1L          equ	4030	;# 
   576   000FBF                     CCPR1H          equ	4031	;# 
   577   000FC0                     ADCON2          equ	4032	;# 
   578   000FC1                     ADCON1          equ	4033	;# 
   579   000FC2                     ADCON0          equ	4034	;# 
   580   000FC3                     ADRES           equ	4035	;# 
   581   000FC3                     ADRESL          equ	4035	;# 
   582   000FC4                     ADRESH          equ	4036	;# 
   583   000FC5                     SSPCON2         equ	4037	;# 
   584   000FC6                     SSPCON1         equ	4038	;# 
   585   000FC7                     SSPSTAT         equ	4039	;# 
   586   000FC8                     SSPADD          equ	4040	;# 
   587   000FC9                     SSPBUF          equ	4041	;# 
   588   000FCA                     T2CON           equ	4042	;# 
   589   000FCB                     PR2             equ	4043	;# 
   590   000FCB                     MEMCON          equ	4043	;# 
   591   000FCC                     TMR2            equ	4044	;# 
   592   000FCD                     T1CON           equ	4045	;# 
   593   000FCE                     TMR1            equ	4046	;# 
   594   000FCE                     TMR1L           equ	4046	;# 
   595   000FCF                     TMR1H           equ	4047	;# 
   596   000FD0                     RCON            equ	4048	;# 
   597   000FD1                     WDTCON          equ	4049	;# 
   598   000FD2                     HLVDCON         equ	4050	;# 
   599   000FD2                     LVDCON          equ	4050	;# 
   600   000FD3                     OSCCON          equ	4051	;# 
   601   000FD5                     T0CON           equ	4053	;# 
   602   000FD6                     TMR0            equ	4054	;# 
   603   000FD6                     TMR0L           equ	4054	;# 
   604   000FD7                     TMR0H           equ	4055	;# 
   605   000FD8                     STATUS          equ	4056	;# 
   606   000FD9                     FSR2            equ	4057	;# 
   607   000FD9                     FSR2L           equ	4057	;# 
   608   000FDA                     FSR2H           equ	4058	;# 
   609   000FDB                     PLUSW2          equ	4059	;# 
   610   000FDC                     PREINC2         equ	4060	;# 
   611   000FDD                     POSTDEC2        equ	4061	;# 
   612   000FDE                     POSTINC2        equ	4062	;# 
   613   000FDF                     INDF2           equ	4063	;# 
   614   000FE0                     BSR             equ	4064	;# 
   615   000FE1                     FSR1            equ	4065	;# 
   616   000FE1                     FSR1L           equ	4065	;# 
   617   000FE2                     FSR1H           equ	4066	;# 
   618   000FE3                     PLUSW1          equ	4067	;# 
   619   000FE4                     PREINC1         equ	4068	;# 
   620   000FE5                     POSTDEC1        equ	4069	;# 
   621   000FE6                     POSTINC1        equ	4070	;# 
   622   000FE7                     INDF1           equ	4071	;# 
   623   000FE8                     WREG            equ	4072	;# 
   624   000FE9                     FSR0            equ	4073	;# 
   625   000FE9                     FSR0L           equ	4073	;# 
   626   000FEA                     FSR0H           equ	4074	;# 
   627   000FEB                     PLUSW0          equ	4075	;# 
   628   000FEC                     PREINC0         equ	4076	;# 
   629   000FED                     POSTDEC0        equ	4077	;# 
   630   000FEE                     POSTINC0        equ	4078	;# 
   631   000FEF                     INDF0           equ	4079	;# 
   632   000FF0                     INTCON3         equ	4080	;# 
   633   000FF1                     INTCON2         equ	4081	;# 
   634   000FF2                     INTCON          equ	4082	;# 
   635   000FF3                     PROD            equ	4083	;# 
   636   000FF3                     PRODL           equ	4083	;# 
   637   000FF4                     PRODH           equ	4084	;# 
   638   000FF5                     TABLAT          equ	4085	;# 
   639   000FF6                     TBLPTR          equ	4086	;# 
   640   000FF6                     TBLPTRL         equ	4086	;# 
   641   000FF7                     TBLPTRH         equ	4087	;# 
   642   000FF8                     TBLPTRU         equ	4088	;# 
   643   000FF9                     PCLAT           equ	4089	;# 
   644   000FF9                     PC              equ	4089	;# 
   645   000FF9                     PCL             equ	4089	;# 
   646   000FFA                     PCLATH          equ	4090	;# 
   647   000FFB                     PCLATU          equ	4091	;# 
   648   000FFC                     STKPTR          equ	4092	;# 
   649   000FFD                     TOS             equ	4093	;# 
   650   000FFD                     TOSL            equ	4093	;# 
   651   000FFE                     TOSH            equ	4094	;# 
   652   000FFF                     TOSU            equ	4095	;# 
   653                           
   654                           	psect	idataCOMRAM
   655   001712                     __pidataCOMRAM:
   656                           	callstack 0
   657                           
   658                           ;initializer for _port_registers
   659   001712  80                 	db	128
   660   001713  0F                 	db	15
   661   001714  81                 	db	129
   662   001715  0F                 	db	15
   663   001716  82                 	db	130
   664   001717  0F                 	db	15
   665   001718  83                 	db	131
   666   001719  0F                 	db	15
   667   00171A  84                 	db	132
   668   00171B  0F                 	db	15
   669                           
   670                           ;initializer for _lat_registers
   671   00171C  89                 	db	137
   672   00171D  0F                 	db	15
   673   00171E  8A                 	db	138
   674   00171F  0F                 	db	15
   675   001720  8B                 	db	139
   676   001721  0F                 	db	15
   677   001722  8C                 	db	140
   678   001723  0F                 	db	15
   679   001724  8D                 	db	141
   680   001725  0F                 	db	15
   681                           
   682                           ;initializer for _tris_registers
   683   001726  92                 	db	146
   684   001727  0F                 	db	15
   685   001728  93                 	db	147
   686   001729  0F                 	db	15
   687   00172A  94                 	db	148
   688   00172B  0F                 	db	15
   689   00172C  95                 	db	149
   690   00172D  0F                 	db	15
   691   00172E  96                 	db	150
   692   00172F  0F                 	db	15
   693                           
   694                           ;initializer for _btn_high_last_valid_status
   695   001730  01                 	db	1
   696                           
   697                           ;initializer for _btn_high_valid_status
   698   001731  01                 	db	1
   699                           
   700                           ;initializer for _btn_low_status
   701   001732  01                 	db	1
   702                           
   703                           ;initializer for _btn_low
   704   001733  CB                 	db	203
   705   001734  01                 	db	1
   706   001735  01                 	db	1
   707                           
   708                           ;initializer for _btn_high
   709   001736  43                 	db	67
   710   001737  01                 	db	1
   711   001738  00                 	db	0
   712                           
   713                           ;initializer for _btn_high_status
   714   001739  01                 	db	1
   715                           
   716                           ;initializer for _led2
   717   00173A  12                 	db	18
   718                           
   719                           ;initializer for _led1
   720   00173B  02                 	db	2
   721                           
   722                           	psect	nvCOMRAM
   723   000048                     __pnvCOMRAM:
   724                           	callstack 0
   725   000048                     _ret:
   726                           	callstack 0
   727   000048                     	ds	1
   728   000F84                     _PORTE          set	3972
   729   000F83                     _PORTD          set	3971
   730   000F82                     _PORTC          set	3970
   731   000F81                     _PORTB          set	3969
   732   000F80                     _PORTA          set	3968
   733   000F8D                     _LATE           set	3981
   734   000F8C                     _LATD           set	3980
   735   000F8B                     _LATC           set	3979
   736   000F8A                     _LATB           set	3978
   737   000F89                     _LATA           set	3977
   738   000F96                     _TRISE          set	3990
   739   000F95                     _TRISD          set	3989
   740   000F94                     _TRISC          set	3988
   741   000F93                     _TRISB          set	3987
   742   000F92                     _TRISA          set	3986
   743                           
   744                           ; #config settings
   745                           
   746                           	psect	cinit
   747   0016DC                     __pcinit:
   748                           	callstack 0
   749   0016DC                     start_initialization:
   750                           	callstack 0
   751   0016DC                     __initialization:
   752                           	callstack 0
   753                           
   754                           ; Initialize objects allocated to COMRAM (42 bytes)
   755                           ; load TBLPTR registers with __pidataCOMRAM
   756   0016DC  0E12               	movlw	low __pidataCOMRAM
   757   0016DE  6EF6               	movwf	tblptrl,c
   758   0016E0  0E17               	movlw	high __pidataCOMRAM
   759   0016E2  6EF7               	movwf	tblptrh,c
   760   0016E4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   761   0016E6  6EF8               	movwf	tblptru,c
   762   0016E8  EE00  F001         	lfsr	0,__pdataCOMRAM
   763   0016EC  EE10 F02A          	lfsr	1,42
   764   0016F0                     copy_data0:
   765   0016F0  0009               	tblrd		*+
   766   0016F2  CFF5 FFEE          	movff	tablat,postinc0
   767   0016F6  50E5               	movf	postdec1,w,c
   768   0016F8  50E1               	movf	fsr1l,w,c
   769   0016FA  E1FA               	bnz	copy_data0
   770                           
   771                           ; Clear objects allocated to COMRAM (9 bytes)
   772   0016FC  EE00  F03F         	lfsr	0,__pbssCOMRAM
   773   001700  0E09               	movlw	9
   774   001702                     clear_0:
   775   001702  6AEE               	clrf	postinc0,c
   776   001704  06E8               	decf	wreg,f,c
   777   001706  E1FD               	bnz	clear_0
   778   001708                     end_of_initialization:
   779                           	callstack 0
   780   001708                     __end_of__initialization:
   781                           	callstack 0
   782   001708  0E00               	movlw	low (__Lmediumconst shr (0+16))
   783   00170A  6EF8               	movwf	tblptru,c
   784   00170C  0100               	movlb	0
   785   00170E  EF0C  F009         	goto	_main	;jump to C main() function
   786                           
   787                           	psect	bssCOMRAM
   788   00003F                     __pbssCOMRAM:
   789                           	callstack 0
   790   00003F                     _ProgramSelected:
   791                           	callstack 0
   792   00003F                     	ds	2
   793   000041                     _btn_high_valid:
   794                           	callstack 0
   795   000041                     	ds	2
   796   000043                     _led1_status:
   797                           	callstack 0
   798   000043                     	ds	1
   799   000044                     led_toggle@F3027:
   800                           	callstack 0
   801   000044                     	ds	1
   802   000045                     led_off@F3022:
   803                           	callstack 0
   804   000045                     	ds	1
   805   000046                     led_on@F3017:
   806                           	callstack 0
   807   000046                     	ds	1
   808   000047                     led_init@F3012:
   809                           	callstack 0
   810   000047                     	ds	1
   811                           
   812                           	psect	dataCOMRAM
   813   000001                     __pdataCOMRAM:
   814                           	callstack 0
   815   000001                     _port_registers:
   816                           	callstack 0
   817   000001                     	ds	10
   818   00000B                     _lat_registers:
   819                           	callstack 0
   820   00000B                     	ds	10
   821   000015                     _tris_registers:
   822                           	callstack 0
   823   000015                     	ds	10
   824   00001F                     _btn_high_last_valid_status:
   825                           	callstack 0
   826   00001F                     	ds	1
   827   000020                     _btn_high_valid_status:
   828                           	callstack 0
   829   000020                     	ds	1
   830   000021                     _btn_low_status:
   831                           	callstack 0
   832   000021                     	ds	1
   833   000022                     _btn_low:
   834                           	callstack 0
   835   000022                     	ds	3
   836   000025                     _btn_high:
   837                           	callstack 0
   838   000025                     	ds	3
   839   000028                     _btn_high_status:
   840                           	callstack 0
   841   000028                     	ds	1
   842   000029                     _led2:
   843                           	callstack 0
   844   000029                     	ds	1
   845   00002A                     _led1:
   846                           	callstack 0
   847   00002A                     	ds	1
   848                           
   849                           	psect	cstackCOMRAM
   850   00002B                     __pcstackCOMRAM:
   851                           	callstack 0
   852   00002B                     gpio_pin_direction_init@_pin_config:
   853                           	callstack 0
   854   00002B                     gpio_pin_write_logic@_pin_config:
   855                           	callstack 0
   856   00002B                     gpio_pin_read_logic@_pin_config:
   857                           	callstack 0
   858                           
   859                           ; 1 bytes @ 0x0
   860   00002B                     	ds	1
   861   00002C                     gpio_pin_write_logic@logic:
   862                           	callstack 0
   863   00002C                     gpio_pin_read_logic@logic:
   864                           	callstack 0
   865   00002C                     ??_gpio_pin_direction_init:
   866                           
   867                           ; 1 bytes @ 0x1
   868   00002C                     	ds	1
   869   00002D                     ??_gpio_pin_read_logic:
   870   00002D                     ??_gpio_pin_write_logic:
   871                           
   872                           ; 1 bytes @ 0x2
   873   00002D                     	ds	4
   874   000031                     button_read_state@btn:
   875                           	callstack 0
   876   000031                     gpio_pin_direction_init@ret:
   877                           	callstack 0
   878                           
   879                           ; 1 bytes @ 0x6
   880   000031                     	ds	1
   881   000032                     button_init@btn:
   882                           	callstack 0
   883   000032                     button_read_state@btn_state:
   884                           	callstack 0
   885   000032                     led_on@led:
   886                           	callstack 0
   887   000032                     led_off@led:
   888                           	callstack 0
   889   000032                     gpio_pin_init@_pin_config:
   890                           	callstack 0
   891                           
   892                           ; 1 bytes @ 0x7
   893   000032                     	ds	1
   894   000033                     button_init@ret:
   895                           	callstack 0
   896   000033                     ??_gpio_pin_init:
   897   000033                     ??_led_on:
   898   000033                     ??_led_off:
   899                           
   900                           ; 1 bytes @ 0x8
   901   000033                     	ds	1
   902   000034                     button_read_state@ret:
   903                           	callstack 0
   904   000034                     led_init@led:
   905                           	callstack 0
   906   000034                     led_on@pin_obj:
   907                           	callstack 0
   908   000034                     led_off@pin_obj:
   909                           	callstack 0
   910                           
   911                           ; 1 bytes @ 0x9
   912   000034                     	ds	1
   913   000035                     button_read_state@pin_logic_status:
   914                           	callstack 0
   915   000035                     ??_led_init:
   916   000035                     ??_program1:
   917   000035                     ??_program2:
   918   000035                     ??_program3:
   919                           
   920                           ; 1 bytes @ 0xA
   921   000035                     	ds	1
   922   000036                     led_init@ret:
   923                           	callstack 0
   924                           
   925                           ; 1 bytes @ 0xB
   926   000036                     	ds	1
   927   000037                     led_init@pin_obj:
   928                           	callstack 0
   929   000037                     program2@i:
   930                           	callstack 0
   931   000037                     program3@i:
   932                           	callstack 0
   933                           
   934                           ; 2 bytes @ 0xC
   935   000037                     	ds	1
   936   000038                     
   937                           ; 1 bytes @ 0xD
   938   000038                     	ds	1
   939   000039                     
   940                           ; 2 bytes @ 0xE
   941   000039                     	ds	2
   942   00003B                     
   943                           ; 2 bytes @ 0x10
   944   00003B                     	ds	2
   945   00003D                     ??_main:
   946                           
   947                           ; 1 bytes @ 0x12
   948   00003D                     	ds	2
   949                           
   950 ;;
   951 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   952 ;;
   953 ;; *************** function _main *****************
   954 ;; Defined at:
   955 ;;		line 78 in file "application.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;  argc            2   14[COMRAM] int 
   958 ;;  argv            2   16[COMRAM] PTR PTR unsigned char 
   959 ;; Auto vars:     Size  Location     Type
   960 ;;		None
   961 ;; Return value:  Size  Location     Type
   962 ;;                  2   14[COMRAM] int 
   963 ;; Registers used:
   964 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   970 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   972 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   973 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   974 ;;Total ram usage:        6 bytes
   975 ;; Hardware stack levels required when called: 4
   976 ;; This function calls:
   977 ;;		_application_init
   978 ;;		_button_read_state
   979 ;;		_program1
   980 ;;		_program2
   981 ;;		_program3
   982 ;; This function is called by:
   983 ;;		Startup code after reset
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           	psect	text0
   988   001218                     __ptext0:
   989                           	callstack 0
   990   001218                     _main:
   991                           	callstack 27
   992   001218                     
   993                           ;application.c: 79:     application_init();
   994   001218  EC9E  F00B         	call	_application_init	;wreg free
   995   00121C                     l1391:
   996                           
   997                           ;application.c: 81:         ret = button_read_state(&btn_high, &btn_high_status);
   998   00121C  0E25               	movlw	low _btn_high
   999   00121E  6E31               	movwf	button_read_state@btn^0,c
  1000   001220  0E28               	movlw	low _btn_high_status
  1001   001222  6E32               	movwf	button_read_state@btn_state^0,c
  1002   001224  EC82  F009         	call	_button_read_state	;wreg free
  1003   001228  6E48               	movwf	_ret^0,c
  1004   00122A                     
  1005                           ;application.c: 82:         if (BUTTON_PRESSED == btn_high_status) {
  1006   00122A  5028               	movf	_btn_high_status^0,w,c
  1007   00122C  A4D8               	btfss	status,2,c
  1008   00122E  EF1B  F009         	goto	u791
  1009   001232  EF1D  F009         	goto	u790
  1010   001236                     u791:
  1011   001236  EF2D  F009         	goto	l1401
  1012   00123A                     u790:
  1013   00123A                     
  1014                           ;application.c: 83:             btn_high_valid++;
  1015   00123A  4A41               	infsnz	_btn_high_valid^0,f,c
  1016   00123C  2A42               	incf	(_btn_high_valid+1)^0,f,c
  1017   00123E                     
  1018                           ;application.c: 84:             if (btn_high_valid > 500) {
  1019   00123E  0EF5               	movlw	245
  1020   001240  5C41               	subwf	_btn_high_valid^0,w,c
  1021   001242  0E01               	movlw	1
  1022   001244  5842               	subwfb	(_btn_high_valid+1)^0,w,c
  1023   001246  A0D8               	btfss	status,0,c
  1024   001248  EF28  F009         	goto	u801
  1025   00124C  EF2A  F009         	goto	u800
  1026   001250                     u801:
  1027   001250  EF33  F009         	goto	l1403
  1028   001254                     u800:
  1029   001254                     
  1030                           ;application.c: 85:                 btn_high_valid_status = BUTTON_PRESSED;
  1031   001254  6A20               	clrf	_btn_high_valid_status^0,c
  1032   001256  EF33  F009         	goto	l1403
  1033   00125A                     l1401:
  1034                           
  1035                           ;application.c: 88:             btn_high_valid = 0;
  1036   00125A  0E00               	movlw	0
  1037   00125C  6E42               	movwf	(_btn_high_valid+1)^0,c
  1038   00125E  0E00               	movlw	0
  1039   001260  6E41               	movwf	_btn_high_valid^0,c
  1040                           
  1041                           ;application.c: 89:             btn_high_valid_status = BUTTON_RELEASED;
  1042   001262  0E01               	movlw	1
  1043   001264  6E20               	movwf	_btn_high_valid_status^0,c
  1044   001266                     l1403:
  1045                           
  1046                           ;application.c: 92:         if (btn_high_valid_status != btn_high_last_valid_status) {
  1047   001266  501F               	movf	_btn_high_last_valid_status^0,w,c
  1048   001268  1820               	xorwf	_btn_high_valid_status^0,w,c
  1049   00126A  B4D8               	btfsc	status,2,c
  1050   00126C  EF3A  F009         	goto	u811
  1051   001270  EF3C  F009         	goto	u810
  1052   001274                     u811:
  1053   001274  EF0E  F009         	goto	l1391
  1054   001278                     u810:
  1055   001278                     
  1056                           ;application.c: 93:             btn_high_last_valid_status = btn_high_valid_status;
  1057   001278  C020  F01F         	movff	_btn_high_valid_status,_btn_high_last_valid_status
  1058   00127C                     
  1059                           ;application.c: 94:             if (BUTTON_PRESSED == btn_high_valid_status) {
  1060   00127C  5020               	movf	_btn_high_valid_status^0,w,c
  1061   00127E  A4D8               	btfss	status,2,c
  1062   001280  EF44  F009         	goto	u821
  1063   001284  EF46  F009         	goto	u820
  1064   001288                     u821:
  1065   001288  EF0E  F009         	goto	l1391
  1066   00128C                     u820:
  1067   00128C                     
  1068                           ;application.c: 95:                 if(3 == ProgramSelected){
  1069   00128C  0E03               	movlw	3
  1070   00128E  183F               	xorwf	_ProgramSelected^0,w,c
  1071   001290  1040               	iorwf	(_ProgramSelected+1)^0,w,c
  1072   001292  A4D8               	btfss	status,2,c
  1073   001294  EF4E  F009         	goto	u831
  1074   001298  EF50  F009         	goto	u830
  1075   00129C                     u831:
  1076   00129C  EF54  F009         	goto	l1413
  1077   0012A0                     u830:
  1078   0012A0                     
  1079                           ;application.c: 96:                     ProgramSelected = 0;
  1080   0012A0  0E00               	movlw	0
  1081   0012A2  6E40               	movwf	(_ProgramSelected+1)^0,c
  1082   0012A4  0E00               	movlw	0
  1083   0012A6  6E3F               	movwf	_ProgramSelected^0,c
  1084   0012A8                     l1413:
  1085                           
  1086                           ;application.c: 98:                 ProgramSelected++;
  1087   0012A8  4A3F               	infsnz	_ProgramSelected^0,f,c
  1088   0012AA  2A40               	incf	(_ProgramSelected+1)^0,f,c
  1089                           
  1090                           ;application.c: 99:                 switch(ProgramSelected){
  1091   0012AC  EF64  F009         	goto	l1423
  1092   0012B0                     l1415:
  1093   0012B0  EC4F  F00B         	call	_program1	;wreg free
  1094   0012B4  EF0E  F009         	goto	l1391
  1095   0012B8                     l1417:
  1096   0012B8  ECF2  F00A         	call	_program2	;wreg free
  1097   0012BC  EF0E  F009         	goto	l1391
  1098   0012C0                     l1419:
  1099   0012C0  ECBF  F00A         	call	_program3	;wreg free
  1100   0012C4  EF0E  F009         	goto	l1391
  1101   0012C8                     l1423:
  1102   0012C8  C03F  F03D         	movff	_ProgramSelected,??_main
  1103   0012CC  C040  F03E         	movff	_ProgramSelected+1,??_main+1
  1104                           
  1105                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1106                           ; Switch size 1, requested type "simple"
  1107                           ; Number of cases is 1, Range of values is 0 to 0
  1108                           ; switch strategies available:
  1109                           ; Name         Instructions Cycles
  1110                           ; simple_byte            4     3 (average)
  1111                           ;	Chosen strategy is simple_byte
  1112   0012D0  503E               	movf	(??_main+1)^0,w,c
  1113   0012D2  0A00               	xorlw	0	; case 0
  1114   0012D4  B4D8               	btfsc	status,2,c
  1115   0012D6  EF6F  F009         	goto	l1437
  1116   0012DA  EF7E  F009         	goto	l237
  1117   0012DE                     l1437:
  1118                           
  1119                           ; Switch size 1, requested type "simple"
  1120                           ; Number of cases is 3, Range of values is 1 to 3
  1121                           ; switch strategies available:
  1122                           ; Name         Instructions Cycles
  1123                           ; simple_byte           10     6 (average)
  1124                           ;	Chosen strategy is simple_byte
  1125   0012DE  503D               	movf	??_main^0,w,c
  1126   0012E0  0A01               	xorlw	1	; case 1
  1127   0012E2  B4D8               	btfsc	status,2,c
  1128   0012E4  EF58  F009         	goto	l1415
  1129   0012E8  0A03               	xorlw	3	; case 2
  1130   0012EA  B4D8               	btfsc	status,2,c
  1131   0012EC  EF5C  F009         	goto	l1417
  1132   0012F0  0A01               	xorlw	1	; case 3
  1133   0012F2  B4D8               	btfsc	status,2,c
  1134   0012F4  EF60  F009         	goto	l1419
  1135   0012F8  EF7E  F009         	goto	l237
  1136   0012FC                     l237:
  1137   0012FC  EF0E  F009         	goto	l1391
  1138   001300  EFFE  F07F         	goto	start
  1139   001304                     __end_of_main:
  1140                           	callstack 0
  1141                           
  1142 ;; *************** function _program3 *****************
  1143 ;; Defined at:
  1144 ;;		line 69 in file "application.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;		None
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;  i               2   12[COMRAM] int 
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  1    wreg      void 
  1151 ;; Registers used:
  1152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1159 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1160 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1161 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1162 ;;Total ram usage:        4 bytes
  1163 ;; Hardware stack levels used: 1
  1164 ;; Hardware stack levels required when called: 2
  1165 ;; This function calls:
  1166 ;;		_led_off
  1167 ;;		_led_on
  1168 ;; This function is called by:
  1169 ;;		_main
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173                           	psect	text1
  1174   00157E                     __ptext1:
  1175                           	callstack 0
  1176   00157E                     _program3:
  1177                           	callstack 28
  1178   00157E                     
  1179                           ;application.c: 70:     for (int i = 0; i < 3; i++) {
  1180   00157E  0E00               	movlw	0
  1181   001580  6E38               	movwf	(program3@i+1)^0,c
  1182   001582  0E00               	movlw	0
  1183   001584  6E37               	movwf	program3@i^0,c
  1184   001586                     l1379:
  1185                           
  1186                           ;application.c: 71:         led_on(&led1);
  1187   001586  0E2A               	movlw	low _led1
  1188   001588  6E32               	movwf	led_on@led^0,c
  1189   00158A  EC55  F00A         	call	_led_on	;wreg free
  1190   00158E                     
  1191                           ;application.c: 72:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1192   00158E  0E06               	movlw	6
  1193   001590  6E36               	movwf	(??_program3+1)^0,c
  1194   001592  0E13               	movlw	19
  1195   001594  6E35               	movwf	??_program3^0,c
  1196   001596  0EAE               	movlw	174
  1197   001598                     u847:
  1198   001598  2EE8               	decfsz	wreg,f,c
  1199   00159A  D7FE               	bra	u847
  1200   00159C  2E35               	decfsz	??_program3^0,f,c
  1201   00159E  D7FC               	bra	u847
  1202   0015A0  2E36               	decfsz	(??_program3+1)^0,f,c
  1203   0015A2  D7FA               	bra	u847
  1204   0015A4                     
  1205                           ;application.c: 73:         led_off(&led1);
  1206   0015A4  0E2A               	movlw	low _led1
  1207   0015A6  6E32               	movwf	led_off@led^0,c
  1208   0015A8  EC8A  F00A         	call	_led_off	;wreg free
  1209                           
  1210                           ;application.c: 74:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1211   0015AC  0E06               	movlw	6
  1212   0015AE  6E36               	movwf	(??_program3+1)^0,c
  1213   0015B0  0E13               	movlw	19
  1214   0015B2  6E35               	movwf	??_program3^0,c
  1215   0015B4  0EAE               	movlw	174
  1216   0015B6                     u857:
  1217   0015B6  2EE8               	decfsz	wreg,f,c
  1218   0015B8  D7FE               	bra	u857
  1219   0015BA  2E35               	decfsz	??_program3^0,f,c
  1220   0015BC  D7FC               	bra	u857
  1221   0015BE  2E36               	decfsz	(??_program3+1)^0,f,c
  1222   0015C0  D7FA               	bra	u857
  1223   0015C2                     
  1224                           ;application.c: 75:     }
  1225   0015C2  4A37               	infsnz	program3@i^0,f,c
  1226   0015C4  2A38               	incf	(program3@i+1)^0,f,c
  1227   0015C6  BE38               	btfsc	(program3@i+1)^0,7,c
  1228   0015C8  EFEF  F00A         	goto	u781
  1229   0015CC  5038               	movf	(program3@i+1)^0,w,c
  1230   0015CE  E109               	bnz	u780
  1231   0015D0  0E03               	movlw	3
  1232   0015D2  5C37               	subwf	program3@i^0,w,c
  1233   0015D4  A0D8               	btfss	status,0,c
  1234   0015D6  EFEF  F00A         	goto	u781
  1235   0015DA  EFF1  F00A         	goto	u780
  1236   0015DE                     u781:
  1237   0015DE  EFC3  F00A         	goto	l1379
  1238   0015E2                     u780:
  1239   0015E2  0012               	return		;funcret
  1240   0015E4                     __end_of_program3:
  1241                           	callstack 0
  1242                           
  1243 ;; *************** function _program2 *****************
  1244 ;; Defined at:
  1245 ;;		line 60 in file "application.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;		None
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;  i               2   12[COMRAM] int 
  1250 ;; Return value:  Size  Location     Type
  1251 ;;                  1    wreg      void 
  1252 ;; Registers used:
  1253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1254 ;; Tracked objects:
  1255 ;;		On entry : 0/0
  1256 ;;		On exit  : 0/0
  1257 ;;		Unchanged: 0/0
  1258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1260 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1261 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1262 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1263 ;;Total ram usage:        4 bytes
  1264 ;; Hardware stack levels used: 1
  1265 ;; Hardware stack levels required when called: 2
  1266 ;; This function calls:
  1267 ;;		_led_off
  1268 ;;		_led_on
  1269 ;; This function is called by:
  1270 ;;		_main
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274                           	psect	text2
  1275   0015E4                     __ptext2:
  1276                           	callstack 0
  1277   0015E4                     _program2:
  1278                           	callstack 28
  1279   0015E4                     
  1280                           ;application.c: 61:     for (int i = 0; i < 2; i++) {
  1281   0015E4  0E00               	movlw	0
  1282   0015E6  6E38               	movwf	(program2@i+1)^0,c
  1283   0015E8  0E00               	movlw	0
  1284   0015EA  6E37               	movwf	program2@i^0,c
  1285   0015EC                     l1365:
  1286                           
  1287                           ;application.c: 62:         led_on(&led1);
  1288   0015EC  0E2A               	movlw	low _led1
  1289   0015EE  6E32               	movwf	led_on@led^0,c
  1290   0015F0  EC55  F00A         	call	_led_on	;wreg free
  1291   0015F4                     
  1292                           ;application.c: 63:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1293   0015F4  0E06               	movlw	6
  1294   0015F6  6E36               	movwf	(??_program2+1)^0,c
  1295   0015F8  0E13               	movlw	19
  1296   0015FA  6E35               	movwf	??_program2^0,c
  1297   0015FC  0EAE               	movlw	174
  1298   0015FE                     u867:
  1299   0015FE  2EE8               	decfsz	wreg,f,c
  1300   001600  D7FE               	bra	u867
  1301   001602  2E35               	decfsz	??_program2^0,f,c
  1302   001604  D7FC               	bra	u867
  1303   001606  2E36               	decfsz	(??_program2+1)^0,f,c
  1304   001608  D7FA               	bra	u867
  1305   00160A                     
  1306                           ;application.c: 64:         led_off(&led1);
  1307   00160A  0E2A               	movlw	low _led1
  1308   00160C  6E32               	movwf	led_off@led^0,c
  1309   00160E  EC8A  F00A         	call	_led_off	;wreg free
  1310                           
  1311                           ;application.c: 65:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1312   001612  0E06               	movlw	6
  1313   001614  6E36               	movwf	(??_program2+1)^0,c
  1314   001616  0E13               	movlw	19
  1315   001618  6E35               	movwf	??_program2^0,c
  1316   00161A  0EAE               	movlw	174
  1317   00161C                     u877:
  1318   00161C  2EE8               	decfsz	wreg,f,c
  1319   00161E  D7FE               	bra	u877
  1320   001620  2E35               	decfsz	??_program2^0,f,c
  1321   001622  D7FC               	bra	u877
  1322   001624  2E36               	decfsz	(??_program2+1)^0,f,c
  1323   001626  D7FA               	bra	u877
  1324   001628                     
  1325                           ;application.c: 66:     }
  1326   001628  4A37               	infsnz	program2@i^0,f,c
  1327   00162A  2A38               	incf	(program2@i+1)^0,f,c
  1328   00162C  BE38               	btfsc	(program2@i+1)^0,7,c
  1329   00162E  EF22  F00B         	goto	u771
  1330   001632  5038               	movf	(program2@i+1)^0,w,c
  1331   001634  E109               	bnz	u770
  1332   001636  0E02               	movlw	2
  1333   001638  5C37               	subwf	program2@i^0,w,c
  1334   00163A  A0D8               	btfss	status,0,c
  1335   00163C  EF22  F00B         	goto	u771
  1336   001640  EF24  F00B         	goto	u770
  1337   001644                     u771:
  1338   001644  EFF6  F00A         	goto	l1365
  1339   001648                     u770:
  1340   001648  0012               	return		;funcret
  1341   00164A                     __end_of_program2:
  1342                           	callstack 0
  1343                           
  1344 ;; *************** function _program1 *****************
  1345 ;; Defined at:
  1346 ;;		line 53 in file "application.c"
  1347 ;; Parameters:    Size  Location     Type
  1348 ;;		None
  1349 ;; Auto vars:     Size  Location     Type
  1350 ;;		None
  1351 ;; Return value:  Size  Location     Type
  1352 ;;                  1    wreg      void 
  1353 ;; Registers used:
  1354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1355 ;; Tracked objects:
  1356 ;;		On entry : 0/0
  1357 ;;		On exit  : 0/0
  1358 ;;		Unchanged: 0/0
  1359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1362 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1363 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1364 ;;Total ram usage:        2 bytes
  1365 ;; Hardware stack levels used: 1
  1366 ;; Hardware stack levels required when called: 2
  1367 ;; This function calls:
  1368 ;;		_led_off
  1369 ;;		_led_on
  1370 ;; This function is called by:
  1371 ;;		_main
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375                           	psect	text3
  1376   00169E                     __ptext3:
  1377                           	callstack 0
  1378   00169E                     _program1:
  1379                           	callstack 28
  1380   00169E                     
  1381                           ;application.c: 54:     led_on(&led1);
  1382   00169E  0E2A               	movlw	low _led1
  1383   0016A0  6E32               	movwf	led_on@led^0,c
  1384   0016A2  EC55  F00A         	call	_led_on	;wreg free
  1385   0016A6                     
  1386                           ;application.c: 55:     _delay((unsigned long)((500)*(8000000/4000.0)));
  1387   0016A6  0E06               	movlw	6
  1388   0016A8  6E36               	movwf	(??_program1+1)^0,c
  1389   0016AA  0E13               	movlw	19
  1390   0016AC  6E35               	movwf	??_program1^0,c
  1391   0016AE  0EAE               	movlw	174
  1392   0016B0                     u887:
  1393   0016B0  2EE8               	decfsz	wreg,f,c
  1394   0016B2  D7FE               	bra	u887
  1395   0016B4  2E35               	decfsz	??_program1^0,f,c
  1396   0016B6  D7FC               	bra	u887
  1397   0016B8  2E36               	decfsz	(??_program1+1)^0,f,c
  1398   0016BA  D7FA               	bra	u887
  1399   0016BC                     
  1400                           ;application.c: 56:     led_off(&led1);
  1401   0016BC  0E2A               	movlw	low _led1
  1402   0016BE  6E32               	movwf	led_off@led^0,c
  1403   0016C0  EC8A  F00A         	call	_led_off	;wreg free
  1404                           
  1405                           ;application.c: 57:     _delay((unsigned long)((500)*(8000000/4000.0)));
  1406   0016C4  0E06               	movlw	6
  1407   0016C6  6E36               	movwf	(??_program1+1)^0,c
  1408   0016C8  0E13               	movlw	19
  1409   0016CA  6E35               	movwf	??_program1^0,c
  1410   0016CC  0EAE               	movlw	174
  1411   0016CE                     u897:
  1412   0016CE  2EE8               	decfsz	wreg,f,c
  1413   0016D0  D7FE               	bra	u897
  1414   0016D2  2E35               	decfsz	??_program1^0,f,c
  1415   0016D4  D7FC               	bra	u897
  1416   0016D6  2E36               	decfsz	(??_program1+1)^0,f,c
  1417   0016D8  D7FA               	bra	u897
  1418   0016DA  0012               	return		;funcret
  1419   0016DC                     __end_of_program1:
  1420                           	callstack 0
  1421                           
  1422 ;; *************** function _led_on *****************
  1423 ;; Defined at:
  1424 ;;		line 40 in file "ECU_Layer/LED/ecu_led.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;  led             1    7[COMRAM] PTR const struct .
  1427 ;;		 -> led1(1), 
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;  pin_obj         1    9[COMRAM] struct .
  1430 ;;  ret             1    0        unsigned char 
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  1    wreg      unsigned char 
  1433 ;; Registers used:
  1434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1440 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1441 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1442 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1443 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1444 ;;Total ram usage:        3 bytes
  1445 ;; Hardware stack levels used: 1
  1446 ;; Hardware stack levels required when called: 1
  1447 ;; This function calls:
  1448 ;;		_gpio_pin_write_logic
  1449 ;; This function is called by:
  1450 ;;		_program1
  1451 ;;		_program2
  1452 ;;		_program3
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           	psect	text4
  1457   0014AA                     __ptext4:
  1458                           	callstack 0
  1459   0014AA                     _led_on:
  1460                           	callstack 28
  1461   0014AA                     
  1462                           ;ECU_Layer/LED/ecu_led.c: 42:     if (((void*)0) == led) {
  1463   0014AA  5032               	movf	led_on@led^0,w,c
  1464   0014AC  A4D8               	btfss	status,2,c
  1465   0014AE  EF5B  F00A         	goto	u671
  1466   0014B2  EF5D  F00A         	goto	u670
  1467   0014B6                     u671:
  1468   0014B6  EF5F  F00A         	goto	l40
  1469   0014BA                     u670:
  1470   0014BA                     
  1471                           ;ECU_Layer/LED/ecu_led.c: 44:     } else {
  1472   0014BA  EF89  F00A         	goto	l44
  1473   0014BE                     l40:
  1474                           
  1475                           ;ECU_Layer/LED/ecu_led.c: 45:         pin_config_t pin_obj = {
  1476   0014BE  C046  F034         	movff	led_on@F3017,led_on@pin_obj
  1477   0014C2  5032               	movf	led_on@led^0,w,c
  1478   0014C4  6ED9               	movwf	fsr2l,c
  1479   0014C6  6ADA               	clrf	fsr2h,c
  1480   0014C8  50DF               	movf	223,w,c
  1481   0014CA  0B0F               	andlw	15
  1482   0014CC  6E33               	movwf	??_led_on^0,c
  1483   0014CE  5034               	movf	led_on@pin_obj^0,w,c
  1484   0014D0  1833               	xorwf	??_led_on^0,w,c
  1485   0014D2  0BF8               	andlw	-8
  1486   0014D4  1833               	xorwf	??_led_on^0,w,c
  1487   0014D6  6E34               	movwf	led_on@pin_obj^0,c
  1488   0014D8  5032               	movf	led_on@led^0,w,c
  1489   0014DA  6ED9               	movwf	fsr2l,c
  1490   0014DC  6ADA               	clrf	fsr2h,c
  1491   0014DE  38DF               	swapf	223,w,c
  1492   0014E0  0B07               	andlw	7
  1493   0014E2  6E33               	movwf	??_led_on^0,c
  1494   0014E4  4633               	rlncf	??_led_on^0,f,c
  1495   0014E6  4633               	rlncf	??_led_on^0,f,c
  1496   0014E8  4633               	rlncf	??_led_on^0,f,c
  1497   0014EA  5034               	movf	led_on@pin_obj^0,w,c
  1498   0014EC  1833               	xorwf	??_led_on^0,w,c
  1499   0014EE  0BC7               	andlw	-57
  1500   0014F0  1833               	xorwf	??_led_on^0,w,c
  1501   0014F2  6E34               	movwf	led_on@pin_obj^0,c
  1502   0014F4  9C34               	bcf	led_on@pin_obj^0,6,c
  1503   0014F6  5032               	movf	led_on@led^0,w,c
  1504   0014F8  6ED9               	movwf	fsr2l,c
  1505   0014FA  6ADA               	clrf	fsr2h,c
  1506   0014FC  AEDF               	btfss	indf2,7,c
  1507   0014FE  D002               	bra	u685
  1508   001500  8E34               	bsf	led_on@pin_obj^0,7,c
  1509   001502  D001               	bra	u687
  1510   001504                     u685:
  1511   001504  9E34               	bcf	led_on@pin_obj^0,7,c
  1512   001506                     u687:
  1513   001506                     
  1514                           ;ECU_Layer/LED/ecu_led.c: 51:         gpio_pin_write_logic(&pin_obj, GPIO_HIGH);
  1515   001506  0E34               	movlw	low led_on@pin_obj
  1516   001508  6E2B               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1517   00150A  0E01               	movlw	1
  1518   00150C  6E2C               	movwf	gpio_pin_write_logic@logic^0,c
  1519   00150E  EC89  F008         	call	_gpio_pin_write_logic	;wreg free
  1520   001512                     l44:
  1521   001512  0012               	return		;funcret
  1522   001514                     __end_of_led_on:
  1523                           	callstack 0
  1524                           
  1525 ;; *************** function _led_off *****************
  1526 ;; Defined at:
  1527 ;;		line 64 in file "ECU_Layer/LED/ecu_led.c"
  1528 ;; Parameters:    Size  Location     Type
  1529 ;;  led             1    7[COMRAM] PTR const struct .
  1530 ;;		 -> led1(1), 
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;  pin_obj         1    9[COMRAM] struct .
  1533 ;;  ret             1    0        unsigned char 
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  1    wreg      unsigned char 
  1536 ;; Registers used:
  1537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1543 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1544 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1545 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1546 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1547 ;;Total ram usage:        3 bytes
  1548 ;; Hardware stack levels used: 1
  1549 ;; Hardware stack levels required when called: 1
  1550 ;; This function calls:
  1551 ;;		_gpio_pin_write_logic
  1552 ;; This function is called by:
  1553 ;;		_program1
  1554 ;;		_program2
  1555 ;;		_program3
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           	psect	text5
  1560   001514                     __ptext5:
  1561                           	callstack 0
  1562   001514                     _led_off:
  1563                           	callstack 28
  1564   001514                     
  1565                           ;ECU_Layer/LED/ecu_led.c: 66:     if (((void*)0) == led) {
  1566   001514  5032               	movf	led_off@led^0,w,c
  1567   001516  A4D8               	btfss	status,2,c
  1568   001518  EF90  F00A         	goto	u691
  1569   00151C  EF92  F00A         	goto	u690
  1570   001520                     u691:
  1571   001520  EF94  F00A         	goto	l47
  1572   001524                     u690:
  1573   001524                     
  1574                           ;ECU_Layer/LED/ecu_led.c: 68:     } else {
  1575   001524  EFBE  F00A         	goto	l51
  1576   001528                     l47:
  1577                           
  1578                           ;ECU_Layer/LED/ecu_led.c: 69:         pin_config_t pin_obj = {
  1579   001528  C045  F034         	movff	led_off@F3022,led_off@pin_obj
  1580   00152C  5032               	movf	led_off@led^0,w,c
  1581   00152E  6ED9               	movwf	fsr2l,c
  1582   001530  6ADA               	clrf	fsr2h,c
  1583   001532  50DF               	movf	223,w,c
  1584   001534  0B0F               	andlw	15
  1585   001536  6E33               	movwf	??_led_off^0,c
  1586   001538  5034               	movf	led_off@pin_obj^0,w,c
  1587   00153A  1833               	xorwf	??_led_off^0,w,c
  1588   00153C  0BF8               	andlw	-8
  1589   00153E  1833               	xorwf	??_led_off^0,w,c
  1590   001540  6E34               	movwf	led_off@pin_obj^0,c
  1591   001542  5032               	movf	led_off@led^0,w,c
  1592   001544  6ED9               	movwf	fsr2l,c
  1593   001546  6ADA               	clrf	fsr2h,c
  1594   001548  38DF               	swapf	223,w,c
  1595   00154A  0B07               	andlw	7
  1596   00154C  6E33               	movwf	??_led_off^0,c
  1597   00154E  4633               	rlncf	??_led_off^0,f,c
  1598   001550  4633               	rlncf	??_led_off^0,f,c
  1599   001552  4633               	rlncf	??_led_off^0,f,c
  1600   001554  5034               	movf	led_off@pin_obj^0,w,c
  1601   001556  1833               	xorwf	??_led_off^0,w,c
  1602   001558  0BC7               	andlw	-57
  1603   00155A  1833               	xorwf	??_led_off^0,w,c
  1604   00155C  6E34               	movwf	led_off@pin_obj^0,c
  1605   00155E  9C34               	bcf	led_off@pin_obj^0,6,c
  1606   001560  5032               	movf	led_off@led^0,w,c
  1607   001562  6ED9               	movwf	fsr2l,c
  1608   001564  6ADA               	clrf	fsr2h,c
  1609   001566  AEDF               	btfss	indf2,7,c
  1610   001568  D002               	bra	u705
  1611   00156A  8E34               	bsf	led_off@pin_obj^0,7,c
  1612   00156C  D001               	bra	u707
  1613   00156E                     u705:
  1614   00156E  9E34               	bcf	led_off@pin_obj^0,7,c
  1615   001570                     u707:
  1616   001570                     
  1617                           ;ECU_Layer/LED/ecu_led.c: 75:         gpio_pin_write_logic(&pin_obj, GPIO_LOW);
  1618   001570  0E34               	movlw	low led_off@pin_obj
  1619   001572  6E2B               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1620   001574  0E00               	movlw	0
  1621   001576  6E2C               	movwf	gpio_pin_write_logic@logic^0,c
  1622   001578  EC89  F008         	call	_gpio_pin_write_logic	;wreg free
  1623   00157C                     l51:
  1624   00157C  0012               	return		;funcret
  1625   00157E                     __end_of_led_off:
  1626                           	callstack 0
  1627                           
  1628 ;; *************** function _button_read_state *****************
  1629 ;; Defined at:
  1630 ;;		line 34 in file "ECU_Layer/button/ecu_button.c"
  1631 ;; Parameters:    Size  Location     Type
  1632 ;;  btn             1    6[COMRAM] PTR const struct .
  1633 ;;		 -> btn_high(3), 
  1634 ;;  btn_state       1    7[COMRAM] PTR enum E2992
  1635 ;;		 -> btn_high_status(1), 
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;  pin_logic_st    1   10[COMRAM] enum E2932
  1638 ;;  ret             1    9[COMRAM] unsigned char 
  1639 ;; Return value:  Size  Location     Type
  1640 ;;                  1    wreg      unsigned char 
  1641 ;; Registers used:
  1642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 0/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1648 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1649 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1650 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1651 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1652 ;;Total ram usage:        5 bytes
  1653 ;; Hardware stack levels used: 1
  1654 ;; Hardware stack levels required when called: 1
  1655 ;; This function calls:
  1656 ;;		_gpio_pin_read_logic
  1657 ;; This function is called by:
  1658 ;;		_main
  1659 ;; This function uses a non-reentrant model
  1660 ;;
  1661                           
  1662                           	psect	text6
  1663   001304                     __ptext6:
  1664                           	callstack 0
  1665   001304                     _button_read_state:
  1666                           	callstack 29
  1667   001304                     
  1668                           ;ECU_Layer/button/ecu_button.c: 36:     logic_t pin_logic_status = GPIO_LOW;
  1669   001304  6A35               	clrf	button_read_state@pin_logic_status^0,c
  1670   001306                     
  1671                           ;ECU_Layer/button/ecu_button.c: 38:     if (((void*)0) == btn || ((void*)0) == btn_state
      +                          ) {
  1672   001306  5031               	movf	button_read_state@btn^0,w,c
  1673   001308  B4D8               	btfsc	status,2,c
  1674   00130A  EF89  F009         	goto	u711
  1675   00130E  EF8B  F009         	goto	u710
  1676   001312                     u711:
  1677   001312  EF93  F009         	goto	l14
  1678   001316                     u710:
  1679   001316  5032               	movf	button_read_state@btn_state^0,w,c
  1680   001318  A4D8               	btfss	status,2,c
  1681   00131A  EF91  F009         	goto	u721
  1682   00131E  EF93  F009         	goto	u720
  1683   001322                     u721:
  1684   001322  EF96  F009         	goto	l1331
  1685   001326                     u720:
  1686   001326                     l14:
  1687                           
  1688                           ;ECU_Layer/button/ecu_button.c: 39:         ret = (Std_ReturnType)0x00;
  1689   001326  6A34               	clrf	button_read_state@ret^0,c
  1690                           
  1691                           ;ECU_Layer/button/ecu_button.c: 40:     } else {
  1692   001328  EFD7  F009         	goto	l15
  1693   00132C                     l1331:
  1694                           
  1695                           ;ECU_Layer/button/ecu_button.c: 41:         gpio_pin_read_logic(&(btn->button_pin), &pin
      +                          _logic_status);
  1696   00132C  C031  F02B         	movff	button_read_state@btn,gpio_pin_read_logic@_pin_config
  1697   001330  0E35               	movlw	low button_read_state@pin_logic_status
  1698   001332  6E2C               	movwf	gpio_pin_read_logic@logic^0,c
  1699   001334  ECD9  F009         	call	_gpio_pin_read_logic	;wreg free
  1700   001338                     
  1701                           ;ECU_Layer/button/ecu_button.c: 42:         if (BUTTON_ACTIVE_HIGH == btn->button_connec
      +                          tion) {
  1702   001338  5031               	movf	button_read_state@btn^0,w,c
  1703   00133A  6ED9               	movwf	fsr2l,c
  1704   00133C  6ADA               	clrf	fsr2h,c
  1705   00133E  0E02               	movlw	2
  1706   001340  26D9               	addwf	fsr2l,f,c
  1707   001342  50DF               	movf	indf2,w,c
  1708   001344  A4D8               	btfss	status,2,c
  1709   001346  EFA7  F009         	goto	u731
  1710   00134A  EFA9  F009         	goto	u730
  1711   00134E                     u731:
  1712   00134E  EFBE  F009         	goto	l1341
  1713   001352                     u730:
  1714   001352                     
  1715                           ;ECU_Layer/button/ecu_button.c: 43:             if (GPIO_HIGH == pin_logic_status) {
  1716   001352  0435               	decf	button_read_state@pin_logic_status^0,w,c
  1717   001354  A4D8               	btfss	status,2,c
  1718   001356  EFAF  F009         	goto	u741
  1719   00135A  EFB1  F009         	goto	u740
  1720   00135E                     u741:
  1721   00135E  EFB7  F009         	goto	l1339
  1722   001362                     u740:
  1723   001362                     l1337:
  1724                           
  1725                           ;ECU_Layer/button/ecu_button.c: 44:                 *btn_state = BUTTON_PRESSED;
  1726   001362  5032               	movf	button_read_state@btn_state^0,w,c
  1727   001364  6ED9               	movwf	fsr2l,c
  1728   001366  6ADA               	clrf	fsr2h,c
  1729   001368  6ADF               	clrf	indf2,c
  1730                           
  1731                           ;ECU_Layer/button/ecu_button.c: 45:             } else {
  1732   00136A  EFD5  F009         	goto	l1349
  1733   00136E                     l1339:
  1734                           
  1735                           ;ECU_Layer/button/ecu_button.c: 46:                 *btn_state = BUTTON_RELEASED;
  1736   00136E  5032               	movf	button_read_state@btn_state^0,w,c
  1737   001370  6ED9               	movwf	fsr2l,c
  1738   001372  6ADA               	clrf	fsr2h,c
  1739   001374  0E01               	movlw	1
  1740   001376  6EDF               	movwf	indf2,c
  1741   001378  EFD5  F009         	goto	l1349
  1742   00137C                     l1341:
  1743   00137C  5031               	movf	button_read_state@btn^0,w,c
  1744   00137E  6ED9               	movwf	fsr2l,c
  1745   001380  6ADA               	clrf	fsr2h,c
  1746   001382  0E02               	movlw	2
  1747   001384  26D9               	addwf	fsr2l,f,c
  1748   001386  04DE               	decf	postinc2,w,c
  1749   001388  A4D8               	btfss	status,2,c
  1750   00138A  EFC9  F009         	goto	u751
  1751   00138E  EFCB  F009         	goto	u750
  1752   001392                     u751:
  1753   001392  EFD5  F009         	goto	l1349
  1754   001396                     u750:
  1755   001396                     
  1756                           ;ECU_Layer/button/ecu_button.c: 49:             if (GPIO_HIGH == pin_logic_status) {
  1757   001396  0435               	decf	button_read_state@pin_logic_status^0,w,c
  1758   001398  A4D8               	btfss	status,2,c
  1759   00139A  EFD1  F009         	goto	u761
  1760   00139E  EFD3  F009         	goto	u760
  1761   0013A2                     u761:
  1762   0013A2  EFB1  F009         	goto	l1337
  1763   0013A6                     u760:
  1764   0013A6  EFB7  F009         	goto	l1339
  1765   0013AA                     l1349:
  1766                           
  1767                           ;ECU_Layer/button/ecu_button.c: 57:         ret = (Std_ReturnType)0x01;
  1768   0013AA  0E01               	movlw	1
  1769   0013AC  6E34               	movwf	button_read_state@ret^0,c
  1770   0013AE                     l15:
  1771                           
  1772                           ;ECU_Layer/button/ecu_button.c: 59:     return ret;
  1773   0013AE  5034               	movf	button_read_state@ret^0,w,c
  1774   0013B0  0012               	return		;funcret
  1775   0013B2                     __end_of_button_read_state:
  1776                           	callstack 0
  1777                           
  1778 ;; *************** function _gpio_pin_read_logic *****************
  1779 ;; Defined at:
  1780 ;;		line 123 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1783 ;;		 -> btn_high(3), 
  1784 ;;  logic           1    1[COMRAM] PTR enum E2932
  1785 ;;		 -> button_read_state@pin_logic_status(1), 
  1786 ;; Auto vars:     Size  Location     Type
  1787 ;;  ret             1    0        unsigned char 
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  1    wreg      unsigned char 
  1790 ;; Registers used:
  1791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1797 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1799 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1800 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1801 ;;Total ram usage:        6 bytes
  1802 ;; Hardware stack levels used: 1
  1803 ;; This function calls:
  1804 ;;		Nothing
  1805 ;; This function is called by:
  1806 ;;		_button_read_state
  1807 ;; This function uses a non-reentrant model
  1808 ;;
  1809                           
  1810                           	psect	text7
  1811   0013B2                     __ptext7:
  1812                           	callstack 0
  1813   0013B2                     _gpio_pin_read_logic:
  1814                           	callstack 29
  1815   0013B2                     
  1816                           ;MCAL_Layer/GPIO/hal_gpio.c: 125:     if (((void*)0) == _pin_config || _pin_config->pin 
      +                          > 8 - 1) {
  1817   0013B2  502B               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  1818   0013B4  B4D8               	btfsc	status,2,c
  1819   0013B6  EFDF  F009         	goto	u621
  1820   0013BA  EFE1  F009         	goto	u620
  1821   0013BE                     u621:
  1822   0013BE  EFF1  F009         	goto	l141
  1823   0013C2                     u620:
  1824   0013C2  502B               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  1825   0013C4  6ED9               	movwf	fsr2l,c
  1826   0013C6  6ADA               	clrf	fsr2h,c
  1827   0013C8  30DF               	rrcf	223,w,c
  1828   0013CA  32E8               	rrcf	wreg,f,c
  1829   0013CC  32E8               	rrcf	wreg,f,c
  1830   0013CE  0B07               	andlw	7
  1831   0013D0  6E2D               	movwf	??_gpio_pin_read_logic^0,c
  1832   0013D2  0E07               	movlw	7
  1833   0013D4  642D               	cpfsgt	??_gpio_pin_read_logic^0,c
  1834   0013D6  EFEF  F009         	goto	u631
  1835   0013DA  EFF1  F009         	goto	u630
  1836   0013DE                     u631:
  1837   0013DE  EFF3  F009         	goto	l1277
  1838   0013E2                     u630:
  1839   0013E2                     l141:
  1840                           
  1841                           ;MCAL_Layer/GPIO/hal_gpio.c: 127:     } else {
  1842   0013E2  EF1D  F00A         	goto	l143
  1843   0013E6                     l1277:
  1844                           
  1845                           ;MCAL_Layer/GPIO/hal_gpio.c: 128:         *logic = ((*port_registers[_pin_config->port] 
      +                          >> _pin_config->pin) & (uint8)1);
  1846   0013E6  502C               	movf	gpio_pin_read_logic@logic^0,w,c
  1847   0013E8  6ED9               	movwf	fsr2l,c
  1848   0013EA  6ADA               	clrf	fsr2h,c
  1849   0013EC  502B               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  1850   0013EE  6EE1               	movwf	fsr1l,c
  1851   0013F0  6AE2               	clrf	fsr1h,c
  1852   0013F2  30E7               	rrcf	231,w,c
  1853   0013F4  32E8               	rrcf	wreg,f,c
  1854   0013F6  32E8               	rrcf	wreg,f,c
  1855   0013F8  0B07               	andlw	7
  1856   0013FA  6E2D               	movwf	??_gpio_pin_read_logic^0,c
  1857   0013FC  502B               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  1858   0013FE  6EE1               	movwf	fsr1l,c
  1859   001400  6AE2               	clrf	fsr1h,c
  1860   001402  50E7               	movf	231,w,c
  1861   001404  0B07               	andlw	7
  1862   001406  0D02               	mullw	2
  1863   001408  50F3               	movf	243,w,c
  1864   00140A  0F01               	addlw	low _port_registers
  1865   00140C  6EE1               	movwf	fsr1l,c
  1866   00140E  6AE2               	clrf	fsr1h,c
  1867   001410  CFE6 F02E          	movff	postinc1,??_gpio_pin_read_logic+1
  1868   001414  CFE5 F02F          	movff	postdec1,??_gpio_pin_read_logic+2
  1869   001418  C02E  FFE1         	movff	??_gpio_pin_read_logic+1,fsr1l
  1870   00141C  C02F  FFE2         	movff	??_gpio_pin_read_logic+2,fsr1h
  1871   001420  50E7               	movf	indf1,w,c
  1872   001422  6E30               	movwf	(??_gpio_pin_read_logic+3)^0,c
  1873   001424  2A2D               	incf	??_gpio_pin_read_logic^0,f,c
  1874   001426  EF17  F00A         	goto	u644
  1875   00142A                     u645:
  1876   00142A  90D8               	bcf	status,0,c
  1877   00142C  3230               	rrcf	(??_gpio_pin_read_logic+3)^0,f,c
  1878   00142E                     u644:
  1879   00142E  2E2D               	decfsz	??_gpio_pin_read_logic^0,f,c
  1880   001430  EF15  F00A         	goto	u645
  1881   001434  5030               	movf	(??_gpio_pin_read_logic+3)^0,w,c
  1882   001436  0B01               	andlw	1
  1883   001438  6EDF               	movwf	indf2,c
  1884   00143A                     l143:
  1885   00143A  0012               	return		;funcret
  1886   00143C                     __end_of_gpio_pin_read_logic:
  1887                           	callstack 0
  1888                           
  1889 ;; *************** function _application_init *****************
  1890 ;; Defined at:
  1891 ;;		line 121 in file "application.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;		None
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;		None
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  1    wreg      void 
  1898 ;; Registers used:
  1899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1909 ;;Total ram usage:        0 bytes
  1910 ;; Hardware stack levels used: 1
  1911 ;; Hardware stack levels required when called: 3
  1912 ;; This function calls:
  1913 ;;		_button_init
  1914 ;;		_led_init
  1915 ;; This function is called by:
  1916 ;;		_main
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           	psect	text8
  1921   00173C                     __ptext8:
  1922                           	callstack 0
  1923   00173C                     _application_init:
  1924                           	callstack 27
  1925   00173C                     
  1926                           ;application.c: 122:     ret = led_init(&led1);
  1927   00173C  0E2A               	movlw	low _led1
  1928   00173E  6E34               	movwf	led_init@led^0,c
  1929   001740  EC1E  F00A         	call	_led_init	;wreg free
  1930   001744  6E48               	movwf	_ret^0,c
  1931                           
  1932                           ;application.c: 123:     ret = led_init(&led2);
  1933   001746  0E29               	movlw	low _led2
  1934   001748  6E34               	movwf	led_init@led^0,c
  1935   00174A  EC1E  F00A         	call	_led_init	;wreg free
  1936   00174E  6E48               	movwf	_ret^0,c
  1937                           
  1938                           ;application.c: 125:     ret = button_init(&btn_high);
  1939   001750  0E25               	movlw	low _btn_high
  1940   001752  6E32               	movwf	button_init@btn^0,c
  1941   001754  ECB3  F00B         	call	_button_init	;wreg free
  1942   001758  6E48               	movwf	_ret^0,c
  1943                           
  1944                           ;application.c: 126:     ret = button_init(&btn_low);
  1945   00175A  0E22               	movlw	low _btn_low
  1946   00175C  6E32               	movwf	button_init@btn^0,c
  1947   00175E  ECB3  F00B         	call	_button_init	;wreg free
  1948   001762  6E48               	movwf	_ret^0,c
  1949   001764  0012               	return		;funcret
  1950   001766                     __end_of_application_init:
  1951                           	callstack 0
  1952                           
  1953 ;; *************** function _led_init *****************
  1954 ;; Defined at:
  1955 ;;		line 17 in file "ECU_Layer/LED/ecu_led.c"
  1956 ;; Parameters:    Size  Location     Type
  1957 ;;  led             1    9[COMRAM] PTR const struct .
  1958 ;;		 -> led2(1), led1(1), 
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;  pin_obj         1   12[COMRAM] struct .
  1961 ;;  ret             1   11[COMRAM] unsigned char 
  1962 ;; Return value:  Size  Location     Type
  1963 ;;                  1    wreg      unsigned char 
  1964 ;; Registers used:
  1965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1966 ;; Tracked objects:
  1967 ;;		On entry : 0/0
  1968 ;;		On exit  : 0/0
  1969 ;;		Unchanged: 0/0
  1970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1971 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1972 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1973 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1974 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1975 ;;Total ram usage:        4 bytes
  1976 ;; Hardware stack levels used: 1
  1977 ;; Hardware stack levels required when called: 2
  1978 ;; This function calls:
  1979 ;;		_gpio_pin_init
  1980 ;; This function is called by:
  1981 ;;		_application_init
  1982 ;; This function uses a non-reentrant model
  1983 ;;
  1984                           
  1985                           	psect	text9
  1986   00143C                     __ptext9:
  1987                           	callstack 0
  1988   00143C                     _led_init:
  1989                           	callstack 27
  1990   00143C                     
  1991                           ;ECU_Layer/LED/ecu_led.c: 18:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1992   00143C  0E01               	movlw	1
  1993   00143E  6E36               	movwf	led_init@ret^0,c
  1994                           
  1995                           ;ECU_Layer/LED/ecu_led.c: 19:     if (((void*)0) == led) {
  1996   001440  5034               	movf	led_init@led^0,w,c
  1997   001442  A4D8               	btfss	status,2,c
  1998   001444  EF26  F00A         	goto	u651
  1999   001448  EF28  F00A         	goto	u650
  2000   00144C                     u651:
  2001   00144C  EF2B  F00A         	goto	l33
  2002   001450                     u650:
  2003   001450                     
  2004                           ;ECU_Layer/LED/ecu_led.c: 20:         ret = (Std_ReturnType)0x00;
  2005   001450  6A36               	clrf	led_init@ret^0,c
  2006                           
  2007                           ;ECU_Layer/LED/ecu_led.c: 21:     } else {
  2008   001452  EF53  F00A         	goto	l1293
  2009   001456                     l33:
  2010                           
  2011                           ;ECU_Layer/LED/ecu_led.c: 22:         pin_config_t pin_obj = {
  2012   001456  C047  F037         	movff	led_init@F3012,led_init@pin_obj
  2013   00145A  5034               	movf	led_init@led^0,w,c
  2014   00145C  6ED9               	movwf	fsr2l,c
  2015   00145E  6ADA               	clrf	fsr2h,c
  2016   001460  50DF               	movf	223,w,c
  2017   001462  0B0F               	andlw	15
  2018   001464  6E35               	movwf	??_led_init^0,c
  2019   001466  5037               	movf	led_init@pin_obj^0,w,c
  2020   001468  1835               	xorwf	??_led_init^0,w,c
  2021   00146A  0BF8               	andlw	-8
  2022   00146C  1835               	xorwf	??_led_init^0,w,c
  2023   00146E  6E37               	movwf	led_init@pin_obj^0,c
  2024   001470  5034               	movf	led_init@led^0,w,c
  2025   001472  6ED9               	movwf	fsr2l,c
  2026   001474  6ADA               	clrf	fsr2h,c
  2027   001476  38DF               	swapf	223,w,c
  2028   001478  0B07               	andlw	7
  2029   00147A  6E35               	movwf	??_led_init^0,c
  2030   00147C  4635               	rlncf	??_led_init^0,f,c
  2031   00147E  4635               	rlncf	??_led_init^0,f,c
  2032   001480  4635               	rlncf	??_led_init^0,f,c
  2033   001482  5037               	movf	led_init@pin_obj^0,w,c
  2034   001484  1835               	xorwf	??_led_init^0,w,c
  2035   001486  0BC7               	andlw	-57
  2036   001488  1835               	xorwf	??_led_init^0,w,c
  2037   00148A  6E37               	movwf	led_init@pin_obj^0,c
  2038   00148C  9C37               	bcf	led_init@pin_obj^0,6,c
  2039   00148E  5034               	movf	led_init@led^0,w,c
  2040   001490  6ED9               	movwf	fsr2l,c
  2041   001492  6ADA               	clrf	fsr2h,c
  2042   001494  AEDF               	btfss	indf2,7,c
  2043   001496  D002               	bra	u665
  2044   001498  8E37               	bsf	led_init@pin_obj^0,7,c
  2045   00149A  D001               	bra	u667
  2046   00149C                     u665:
  2047   00149C  9E37               	bcf	led_init@pin_obj^0,7,c
  2048   00149E                     u667:
  2049   00149E                     
  2050                           ;ECU_Layer/LED/ecu_led.c: 28:         gpio_pin_init(&pin_obj);
  2051   00149E  0E37               	movlw	low led_init@pin_obj
  2052   0014A0  6E32               	movwf	gpio_pin_init@_pin_config^0,c
  2053   0014A2  EC25  F00B         	call	_gpio_pin_init	;wreg free
  2054   0014A6                     l1293:
  2055                           
  2056                           ;ECU_Layer/LED/ecu_led.c: 30:     return ret;
  2057   0014A6  5036               	movf	led_init@ret^0,w,c
  2058   0014A8  0012               	return		;funcret
  2059   0014AA                     __end_of_led_init:
  2060                           	callstack 0
  2061                           
  2062 ;; *************** function _gpio_pin_init *****************
  2063 ;; Defined at:
  2064 ;;		line 23 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;  _pin_config     1    7[COMRAM] PTR const struct .
  2067 ;;		 -> led_init@pin_obj(1), 
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;  ret             1    0        unsigned char 
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  1    wreg      unsigned char 
  2072 ;; Registers used:
  2073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2079 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2081 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2082 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2083 ;;Total ram usage:        2 bytes
  2084 ;; Hardware stack levels used: 1
  2085 ;; Hardware stack levels required when called: 1
  2086 ;; This function calls:
  2087 ;;		_gpio_pin_direction_init
  2088 ;;		_gpio_pin_write_logic
  2089 ;; This function is called by:
  2090 ;;		_led_init
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094                           	psect	text10
  2095   00164A                     __ptext10:
  2096                           	callstack 0
  2097   00164A                     _gpio_pin_init:
  2098                           	callstack 27
  2099   00164A                     
  2100                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:     if (((void*)0) == _pin_config || _pin_config->pin >
      +                           8 - 1) {
  2101   00164A  5032               	movf	gpio_pin_init@_pin_config^0,w,c
  2102   00164C  B4D8               	btfsc	status,2,c
  2103   00164E  EF2B  F00B         	goto	u591
  2104   001652  EF2D  F00B         	goto	u590
  2105   001656                     u591:
  2106   001656  EF3D  F00B         	goto	l103
  2107   00165A                     u590:
  2108   00165A  5032               	movf	gpio_pin_init@_pin_config^0,w,c
  2109   00165C  6ED9               	movwf	fsr2l,c
  2110   00165E  6ADA               	clrf	fsr2h,c
  2111   001660  30DF               	rrcf	223,w,c
  2112   001662  32E8               	rrcf	wreg,f,c
  2113   001664  32E8               	rrcf	wreg,f,c
  2114   001666  0B07               	andlw	7
  2115   001668  6E33               	movwf	??_gpio_pin_init^0,c
  2116   00166A  0E07               	movlw	7
  2117   00166C  6433               	cpfsgt	??_gpio_pin_init^0,c
  2118   00166E  EF3B  F00B         	goto	u601
  2119   001672  EF3D  F00B         	goto	u600
  2120   001676                     u601:
  2121   001676  EF3F  F00B         	goto	l1257
  2122   00167A                     u600:
  2123   00167A                     l103:
  2124                           
  2125                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:     } else {
  2126   00167A  EF4E  F00B         	goto	l105
  2127   00167E                     l1257:
  2128                           
  2129                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:         gpio_pin_direction_init(_pin_config);
  2130   00167E  C032  F02B         	movff	gpio_pin_init@_pin_config,gpio_pin_direction_init@_pin_config
  2131   001682  EC01  F008         	call	_gpio_pin_direction_init	;wreg free
  2132                           
  2133                           ;MCAL_Layer/GPIO/hal_gpio.c: 29:         gpio_pin_write_logic(_pin_config, _pin_config->
      +                          logic);
  2134   001686  C032  F02B         	movff	gpio_pin_init@_pin_config,gpio_pin_write_logic@_pin_config
  2135   00168A  5032               	movf	gpio_pin_init@_pin_config^0,w,c
  2136   00168C  6ED9               	movwf	fsr2l,c
  2137   00168E  6ADA               	clrf	fsr2h,c
  2138   001690  0E00               	movlw	0
  2139   001692  BEDF               	btfsc	indf2,7,c
  2140   001694  0E01               	movlw	1
  2141   001696  6E2C               	movwf	gpio_pin_write_logic@logic^0,c
  2142   001698  EC89  F008         	call	_gpio_pin_write_logic	;wreg free
  2143   00169C                     l105:
  2144   00169C  0012               	return		;funcret
  2145   00169E                     __end_of_gpio_pin_init:
  2146                           	callstack 0
  2147                           
  2148 ;; *************** function _gpio_pin_write_logic *****************
  2149 ;; Defined at:
  2150 ;;		line 94 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  2153 ;;		 -> led_off@pin_obj(1), led_on@pin_obj(1), led_init@pin_obj(1), 
  2154 ;;  logic           1    1[COMRAM] enum E2932
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;  ret             1    0        unsigned char 
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  1    wreg      unsigned char 
  2159 ;; Registers used:
  2160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2166 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2168 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2169 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2170 ;;Total ram usage:        7 bytes
  2171 ;; Hardware stack levels used: 1
  2172 ;; This function calls:
  2173 ;;		Nothing
  2174 ;; This function is called by:
  2175 ;;		_led_on
  2176 ;;		_led_off
  2177 ;;		_gpio_pin_init
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           	psect	text11
  2182   001112                     __ptext11:
  2183                           	callstack 0
  2184   001112                     _gpio_pin_write_logic:
  2185                           	callstack 28
  2186   001112                     
  2187                           ;MCAL_Layer/GPIO/hal_gpio.c: 96:     if (((void*)0) == _pin_config || _pin_config->pin >
      +                           8 - 1) {
  2188   001112  502B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2189   001114  B4D8               	btfsc	status,2,c
  2190   001116  EF8F  F008         	goto	u551
  2191   00111A  EF91  F008         	goto	u550
  2192   00111E                     u551:
  2193   00111E  EFA1  F008         	goto	l129
  2194   001122                     u550:
  2195   001122  502B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2196   001124  6ED9               	movwf	fsr2l,c
  2197   001126  6ADA               	clrf	fsr2h,c
  2198   001128  30DF               	rrcf	223,w,c
  2199   00112A  32E8               	rrcf	wreg,f,c
  2200   00112C  32E8               	rrcf	wreg,f,c
  2201   00112E  0B07               	andlw	7
  2202   001130  6E2D               	movwf	??_gpio_pin_write_logic^0,c
  2203   001132  0E07               	movlw	7
  2204   001134  642D               	cpfsgt	??_gpio_pin_write_logic^0,c
  2205   001136  EF9F  F008         	goto	u561
  2206   00113A  EFA1  F008         	goto	u560
  2207   00113E                     u561:
  2208   00113E  EFF6  F008         	goto	l1247
  2209   001142                     u560:
  2210   001142                     l129:
  2211                           
  2212                           ;MCAL_Layer/GPIO/hal_gpio.c: 98:     } else {
  2213   001142  EF0B  F009         	goto	l136
  2214   001146                     l1243:
  2215                           
  2216                           ;MCAL_Layer/GPIO/hal_gpio.c: 101:                 (*lat_registers[_pin_config->port] &= 
      +                          ~((uint8)1 << _pin_config->pin));
  2217   001146  502B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2218   001148  6ED9               	movwf	fsr2l,c
  2219   00114A  6ADA               	clrf	fsr2h,c
  2220   00114C  30DF               	rrcf	223,w,c
  2221   00114E  32E8               	rrcf	wreg,f,c
  2222   001150  32E8               	rrcf	wreg,f,c
  2223   001152  0B07               	andlw	7
  2224   001154  6E2D               	movwf	??_gpio_pin_write_logic^0,c
  2225   001156  0E01               	movlw	1
  2226   001158  6E2E               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2227   00115A  2A2D               	incf	??_gpio_pin_write_logic^0,f,c
  2228   00115C  EFB2  F008         	goto	u574
  2229   001160                     u575:
  2230   001160  90D8               	bcf	status,0,c
  2231   001162  362E               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2232   001164                     u574:
  2233   001164  2E2D               	decfsz	??_gpio_pin_write_logic^0,f,c
  2234   001166  EFB0  F008         	goto	u575
  2235   00116A  502E               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2236   00116C  0AFF               	xorlw	255
  2237   00116E  6E2F               	movwf	(??_gpio_pin_write_logic+2)^0,c
  2238   001170  502B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2239   001172  6ED9               	movwf	fsr2l,c
  2240   001174  6ADA               	clrf	fsr2h,c
  2241   001176  50DF               	movf	223,w,c
  2242   001178  0B07               	andlw	7
  2243   00117A  0D02               	mullw	2
  2244   00117C  50F3               	movf	243,w,c
  2245   00117E  0F0B               	addlw	low _lat_registers
  2246   001180  6ED9               	movwf	fsr2l,c
  2247   001182  6ADA               	clrf	fsr2h,c
  2248   001184  CFDE F030          	movff	postinc2,??_gpio_pin_write_logic+3
  2249   001188  CFDD F031          	movff	postdec2,??_gpio_pin_write_logic+4
  2250   00118C  C030  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  2251   001190  C031  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  2252   001194  502F               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  2253   001196  16DF               	andwf	indf2,f,c
  2254                           
  2255                           ;MCAL_Layer/GPIO/hal_gpio.c: 102:                 break;
  2256   001198  EF0B  F009         	goto	l136
  2257   00119C                     l1245:
  2258                           
  2259                           ;MCAL_Layer/GPIO/hal_gpio.c: 104:                 (*lat_registers[_pin_config->port] |= 
      +                          ((uint8)1 << _pin_config->pin));
  2260   00119C  502B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2261   00119E  6ED9               	movwf	fsr2l,c
  2262   0011A0  6ADA               	clrf	fsr2h,c
  2263   0011A2  30DF               	rrcf	223,w,c
  2264   0011A4  32E8               	rrcf	wreg,f,c
  2265   0011A6  32E8               	rrcf	wreg,f,c
  2266   0011A8  0B07               	andlw	7
  2267   0011AA  6E2D               	movwf	??_gpio_pin_write_logic^0,c
  2268   0011AC  0E01               	movlw	1
  2269   0011AE  6E2E               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2270   0011B0  2A2D               	incf	??_gpio_pin_write_logic^0,f,c
  2271   0011B2  EFDD  F008         	goto	u584
  2272   0011B6                     u585:
  2273   0011B6  90D8               	bcf	status,0,c
  2274   0011B8  362E               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2275   0011BA                     u584:
  2276   0011BA  2E2D               	decfsz	??_gpio_pin_write_logic^0,f,c
  2277   0011BC  EFDB  F008         	goto	u585
  2278   0011C0  502B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2279   0011C2  6ED9               	movwf	fsr2l,c
  2280   0011C4  6ADA               	clrf	fsr2h,c
  2281   0011C6  50DF               	movf	223,w,c
  2282   0011C8  0B07               	andlw	7
  2283   0011CA  0D02               	mullw	2
  2284   0011CC  50F3               	movf	243,w,c
  2285   0011CE  0F0B               	addlw	low _lat_registers
  2286   0011D0  6ED9               	movwf	fsr2l,c
  2287   0011D2  6ADA               	clrf	fsr2h,c
  2288   0011D4  CFDE F02F          	movff	postinc2,??_gpio_pin_write_logic+2
  2289   0011D8  CFDD F030          	movff	postdec2,??_gpio_pin_write_logic+3
  2290   0011DC  C02F  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  2291   0011E0  C030  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  2292   0011E4  502E               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2293   0011E6  12DF               	iorwf	indf2,f,c
  2294                           
  2295                           ;MCAL_Layer/GPIO/hal_gpio.c: 105:                 break;
  2296   0011E8  EF0B  F009         	goto	l136
  2297   0011EC                     l1247:
  2298   0011EC  502C               	movf	gpio_pin_write_logic@logic^0,w,c
  2299   0011EE  6E2D               	movwf	??_gpio_pin_write_logic^0,c
  2300   0011F0  6A2E               	clrf	(??_gpio_pin_write_logic+1)^0,c
  2301                           
  2302                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2303                           ; Switch size 1, requested type "simple"
  2304                           ; Number of cases is 1, Range of values is 0 to 0
  2305                           ; switch strategies available:
  2306                           ; Name         Instructions Cycles
  2307                           ; simple_byte            4     3 (average)
  2308                           ;	Chosen strategy is simple_byte
  2309   0011F2  502E               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2310   0011F4  0A00               	xorlw	0	; case 0
  2311   0011F6  B4D8               	btfsc	status,2,c
  2312   0011F8  EF00  F009         	goto	l1439
  2313   0011FC  EFA1  F008         	goto	l129
  2314   001200                     l1439:
  2315                           
  2316                           ; Switch size 1, requested type "simple"
  2317                           ; Number of cases is 2, Range of values is 0 to 1
  2318                           ; switch strategies available:
  2319                           ; Name         Instructions Cycles
  2320                           ; simple_byte            7     4 (average)
  2321                           ;	Chosen strategy is simple_byte
  2322   001200  502D               	movf	??_gpio_pin_write_logic^0,w,c
  2323   001202  0A00               	xorlw	0	; case 0
  2324   001204  B4D8               	btfsc	status,2,c
  2325   001206  EFA3  F008         	goto	l1243
  2326   00120A  0A01               	xorlw	1	; case 1
  2327   00120C  B4D8               	btfsc	status,2,c
  2328   00120E  EFCE  F008         	goto	l1245
  2329   001212  EFA1  F008         	goto	l129
  2330   001216                     l136:
  2331   001216  0012               	return		;funcret
  2332   001218                     __end_of_gpio_pin_write_logic:
  2333                           	callstack 0
  2334                           
  2335 ;; *************** function _button_init *****************
  2336 ;; Defined at:
  2337 ;;		line 17 in file "ECU_Layer/button/ecu_button.c"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;  btn             1    7[COMRAM] PTR const struct .
  2340 ;;		 -> btn_low(3), btn_high(3), 
  2341 ;; Auto vars:     Size  Location     Type
  2342 ;;  ret             1    8[COMRAM] unsigned char 
  2343 ;; Return value:  Size  Location     Type
  2344 ;;                  1    wreg      unsigned char 
  2345 ;; Registers used:
  2346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2347 ;; Tracked objects:
  2348 ;;		On entry : 0/0
  2349 ;;		On exit  : 0/0
  2350 ;;		Unchanged: 0/0
  2351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2352 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2353 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2355 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2356 ;;Total ram usage:        2 bytes
  2357 ;; Hardware stack levels used: 1
  2358 ;; Hardware stack levels required when called: 1
  2359 ;; This function calls:
  2360 ;;		_gpio_pin_direction_init
  2361 ;; This function is called by:
  2362 ;;		_application_init
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366                           	psect	text12
  2367   001766                     __ptext12:
  2368                           	callstack 0
  2369   001766                     _button_init:
  2370                           	callstack 28
  2371   001766                     
  2372                           ;ECU_Layer/button/ecu_button.c: 19:     if (((void*)0) == btn) {
  2373   001766  5032               	movf	button_init@btn^0,w,c
  2374   001768  A4D8               	btfss	status,2,c
  2375   00176A  EFB9  F00B         	goto	u611
  2376   00176E  EFBB  F00B         	goto	u610
  2377   001772                     u611:
  2378   001772  EFBE  F00B         	goto	l1267
  2379   001776                     u610:
  2380   001776                     
  2381                           ;ECU_Layer/button/ecu_button.c: 20:         ret = (Std_ReturnType)0x00;
  2382   001776  6A33               	clrf	button_init@ret^0,c
  2383                           
  2384                           ;ECU_Layer/button/ecu_button.c: 21:     } else {
  2385   001778  EFC3  F00B         	goto	l1269
  2386   00177C                     l1267:
  2387                           
  2388                           ;ECU_Layer/button/ecu_button.c: 22:         ret = gpio_pin_direction_init(&btn->button_p
      +                          in);
  2389   00177C  C032  F02B         	movff	button_init@btn,gpio_pin_direction_init@_pin_config
  2390   001780  EC01  F008         	call	_gpio_pin_direction_init	;wreg free
  2391   001784  6E33               	movwf	button_init@ret^0,c
  2392   001786                     l1269:
  2393                           
  2394                           ;ECU_Layer/button/ecu_button.c: 24:     return ret;
  2395   001786  5033               	movf	button_init@ret^0,w,c
  2396   001788  0012               	return		;funcret
  2397   00178A                     __end_of_button_init:
  2398                           	callstack 0
  2399                           
  2400 ;; *************** function _gpio_pin_direction_init *****************
  2401 ;; Defined at:
  2402 ;;		line 44 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  2405 ;;		 -> btn_low(3), btn_high(3), led_init@pin_obj(1), 
  2406 ;; Auto vars:     Size  Location     Type
  2407 ;;  ret             1    6[COMRAM] unsigned char 
  2408 ;; Return value:  Size  Location     Type
  2409 ;;                  1    wreg      unsigned char 
  2410 ;; Registers used:
  2411 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2412 ;; Tracked objects:
  2413 ;;		On entry : 0/0
  2414 ;;		On exit  : 0/0
  2415 ;;		Unchanged: 0/0
  2416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2417 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2418 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2419 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2420 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2421 ;;Total ram usage:        7 bytes
  2422 ;; Hardware stack levels used: 1
  2423 ;; This function calls:
  2424 ;;		Nothing
  2425 ;; This function is called by:
  2426 ;;		_button_init
  2427 ;;		_gpio_pin_init
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           
  2431                           	psect	text13
  2432   001002                     __ptext13:
  2433                           	callstack 0
  2434   001002                     _gpio_pin_direction_init:
  2435                           	callstack 27
  2436   001002                     
  2437                           ;MCAL_Layer/GPIO/hal_gpio.c: 45:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2438   001002  0E01               	movlw	1
  2439   001004  6E31               	movwf	gpio_pin_direction_init@ret^0,c
  2440                           
  2441                           ;MCAL_Layer/GPIO/hal_gpio.c: 46:     if (((void*)0) == _pin_config || _pin_config->pin >
      +                           8 - 1) {
  2442   001006  502B               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  2443   001008  B4D8               	btfsc	status,2,c
  2444   00100A  EF09  F008         	goto	u501
  2445   00100E  EF0B  F008         	goto	u500
  2446   001012                     u501:
  2447   001012  EF1B  F008         	goto	l110
  2448   001016                     u500:
  2449   001016  502B               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  2450   001018  6ED9               	movwf	fsr2l,c
  2451   00101A  6ADA               	clrf	fsr2h,c
  2452   00101C  30DF               	rrcf	223,w,c
  2453   00101E  32E8               	rrcf	wreg,f,c
  2454   001020  32E8               	rrcf	wreg,f,c
  2455   001022  0B07               	andlw	7
  2456   001024  6E2C               	movwf	??_gpio_pin_direction_init^0,c
  2457   001026  0E07               	movlw	7
  2458   001028  642C               	cpfsgt	??_gpio_pin_direction_init^0,c
  2459   00102A  EF19  F008         	goto	u511
  2460   00102E  EF1B  F008         	goto	u510
  2461   001032                     u511:
  2462   001032  EF71  F008         	goto	l1233
  2463   001036                     u510:
  2464   001036                     l110:
  2465                           
  2466                           ;MCAL_Layer/GPIO/hal_gpio.c: 47:         ret = (Std_ReturnType)0x00;
  2467   001036  6A31               	clrf	gpio_pin_direction_init@ret^0,c
  2468                           
  2469                           ;MCAL_Layer/GPIO/hal_gpio.c: 48:     } else {
  2470   001038  EF87  F008         	goto	l1235
  2471   00103C                     l1229:
  2472                           
  2473                           ;MCAL_Layer/GPIO/hal_gpio.c: 51:                 (*tris_registers[_pin_config->port] &= 
      +                          ~((uint8)1 << _pin_config->pin));
  2474   00103C  502B               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  2475   00103E  6ED9               	movwf	fsr2l,c
  2476   001040  6ADA               	clrf	fsr2h,c
  2477   001042  30DF               	rrcf	223,w,c
  2478   001044  32E8               	rrcf	wreg,f,c
  2479   001046  32E8               	rrcf	wreg,f,c
  2480   001048  0B07               	andlw	7
  2481   00104A  6E2C               	movwf	??_gpio_pin_direction_init^0,c
  2482   00104C  0E01               	movlw	1
  2483   00104E  6E2D               	movwf	(??_gpio_pin_direction_init+1)^0,c
  2484   001050  2A2C               	incf	??_gpio_pin_direction_init^0,f,c
  2485   001052  EF2D  F008         	goto	u524
  2486   001056                     u525:
  2487   001056  90D8               	bcf	status,0,c
  2488   001058  362D               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  2489   00105A                     u524:
  2490   00105A  2E2C               	decfsz	??_gpio_pin_direction_init^0,f,c
  2491   00105C  EF2B  F008         	goto	u525
  2492   001060  502D               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  2493   001062  0AFF               	xorlw	255
  2494   001064  6E2E               	movwf	(??_gpio_pin_direction_init+2)^0,c
  2495   001066  502B               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  2496   001068  6ED9               	movwf	fsr2l,c
  2497   00106A  6ADA               	clrf	fsr2h,c
  2498   00106C  50DF               	movf	223,w,c
  2499   00106E  0B07               	andlw	7
  2500   001070  0D02               	mullw	2
  2501   001072  50F3               	movf	243,w,c
  2502   001074  0F15               	addlw	low _tris_registers
  2503   001076  6ED9               	movwf	fsr2l,c
  2504   001078  6ADA               	clrf	fsr2h,c
  2505   00107A  CFDE F02F          	movff	postinc2,??_gpio_pin_direction_init+3
  2506   00107E  CFDD F030          	movff	postdec2,??_gpio_pin_direction_init+4
  2507   001082  C02F  FFD9         	movff	??_gpio_pin_direction_init+3,fsr2l
  2508   001086  C030  FFDA         	movff	??_gpio_pin_direction_init+4,fsr2h
  2509   00108A  502E               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  2510   00108C  16DF               	andwf	indf2,f,c
  2511                           
  2512                           ;MCAL_Layer/GPIO/hal_gpio.c: 52:                 break;
  2513   00108E  EF87  F008         	goto	l1235
  2514   001092                     l1231:
  2515                           
  2516                           ;MCAL_Layer/GPIO/hal_gpio.c: 55:                 (*tris_registers[_pin_config->port] |= 
      +                          ((uint8)1 << _pin_config->pin));
  2517   001092  502B               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  2518   001094  6ED9               	movwf	fsr2l,c
  2519   001096  6ADA               	clrf	fsr2h,c
  2520   001098  30DF               	rrcf	223,w,c
  2521   00109A  32E8               	rrcf	wreg,f,c
  2522   00109C  32E8               	rrcf	wreg,f,c
  2523   00109E  0B07               	andlw	7
  2524   0010A0  6E2C               	movwf	??_gpio_pin_direction_init^0,c
  2525   0010A2  0E01               	movlw	1
  2526   0010A4  6E2D               	movwf	(??_gpio_pin_direction_init+1)^0,c
  2527   0010A6  2A2C               	incf	??_gpio_pin_direction_init^0,f,c
  2528   0010A8  EF58  F008         	goto	u534
  2529   0010AC                     u535:
  2530   0010AC  90D8               	bcf	status,0,c
  2531   0010AE  362D               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  2532   0010B0                     u534:
  2533   0010B0  2E2C               	decfsz	??_gpio_pin_direction_init^0,f,c
  2534   0010B2  EF56  F008         	goto	u535
  2535   0010B6  502B               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  2536   0010B8  6ED9               	movwf	fsr2l,c
  2537   0010BA  6ADA               	clrf	fsr2h,c
  2538   0010BC  50DF               	movf	223,w,c
  2539   0010BE  0B07               	andlw	7
  2540   0010C0  0D02               	mullw	2
  2541   0010C2  50F3               	movf	243,w,c
  2542   0010C4  0F15               	addlw	low _tris_registers
  2543   0010C6  6ED9               	movwf	fsr2l,c
  2544   0010C8  6ADA               	clrf	fsr2h,c
  2545   0010CA  CFDE F02E          	movff	postinc2,??_gpio_pin_direction_init+2
  2546   0010CE  CFDD F02F          	movff	postdec2,??_gpio_pin_direction_init+3
  2547   0010D2  C02E  FFD9         	movff	??_gpio_pin_direction_init+2,fsr2l
  2548   0010D6  C02F  FFDA         	movff	??_gpio_pin_direction_init+3,fsr2h
  2549   0010DA  502D               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  2550   0010DC  12DF               	iorwf	indf2,f,c
  2551                           
  2552                           ;MCAL_Layer/GPIO/hal_gpio.c: 56:                 break;
  2553   0010DE  EF87  F008         	goto	l1235
  2554   0010E2                     l1233:
  2555   0010E2  502B               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  2556   0010E4  6ED9               	movwf	fsr2l,c
  2557   0010E6  6ADA               	clrf	fsr2h,c
  2558   0010E8  BCDF               	btfsc	indf2,6,c
  2559   0010EA  EF79  F008         	goto	u541
  2560   0010EE  EF7C  F008         	goto	u540
  2561   0010F2                     u541:
  2562   0010F2  0E01               	movlw	1
  2563   0010F4  EF7D  F008         	goto	u546
  2564   0010F8                     u540:
  2565   0010F8  0E00               	movlw	0
  2566   0010FA                     u546:
  2567                           
  2568                           ; Switch size 1, requested type "simple"
  2569                           ; Number of cases is 2, Range of values is 0 to 1
  2570                           ; switch strategies available:
  2571                           ; Name         Instructions Cycles
  2572                           ; simple_byte            7     4 (average)
  2573                           ;	Chosen strategy is simple_byte
  2574   0010FA  0A00               	xorlw	0	; case 0
  2575   0010FC  B4D8               	btfsc	status,2,c
  2576   0010FE  EF1E  F008         	goto	l1229
  2577   001102  0A01               	xorlw	1	; case 1
  2578   001104  B4D8               	btfsc	status,2,c
  2579   001106  EF49  F008         	goto	l1231
  2580   00110A  EF1B  F008         	goto	l110
  2581   00110E                     l1235:
  2582                           
  2583                           ;MCAL_Layer/GPIO/hal_gpio.c: 61:     return ret;
  2584   00110E  5031               	movf	gpio_pin_direction_init@ret^0,w,c
  2585   001110  0012               	return		;funcret
  2586   001112                     __end_of_gpio_pin_direction_init:
  2587                           	callstack 0
  2588                           
  2589                           	psect	smallconst
  2590   001000                     __psmallconst:
  2591                           	callstack 0
  2592   001000  00                 	db	0
  2593   001001  00                 	db	0	; dummy byte at the end
  2594   001000                     __smallconst    set	__psmallconst
  2595   001000                     __mediumconst   set	__psmallconst
  2596   000002                     __activetblptr  equ	2
  2597                           
  2598                           	psect	rparam
  2599   000001                     ___rparam_used  equ	1
  2600   000000                     ___param_bank   equ	0
  2601   000000                     __Lparam        equ	__Lrparam
  2602   000000                     __Hparam        equ	__Hrparam
  2603                           
  2604                           	psect	config
  2605                           
  2606                           ; Padding undefined space
  2607   300000                     	org	3145728
  2608   300000  FF                 	db	255
  2609                           
  2610                           ;Config register CONFIG1H @ 0x300001
  2611                           ;	Oscillator Selection bits
  2612                           ;	OSC = HS, HS oscillator
  2613                           ;	Fail-Safe Clock Monitor Enable bit
  2614                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2615                           ;	Internal/External Oscillator Switchover bit
  2616                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2617   300001                     	org	3145729
  2618   300001  02                 	db	2
  2619                           
  2620                           ;Config register CONFIG2L @ 0x300002
  2621                           ;	Power-up Timer Enable bit
  2622                           ;	PWRT = OFF, PWRT disabled
  2623                           ;	Brown-out Reset Enable bits
  2624                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2625                           ;	Brown Out Reset Voltage bits
  2626                           ;	BORV = 1, 
  2627   300002                     	org	3145730
  2628   300002  09                 	db	9
  2629                           
  2630                           ;Config register CONFIG2H @ 0x300003
  2631                           ;	Watchdog Timer Enable bit
  2632                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2633                           ;	Watchdog Timer Postscale Select bits
  2634                           ;	WDTPS = 32768, 1:32768
  2635   300003                     	org	3145731
  2636   300003  1E                 	db	30
  2637                           
  2638                           ; Padding undefined space
  2639   300004                     	org	3145732
  2640   300004  FF                 	db	255
  2641                           
  2642                           ;Config register CONFIG3H @ 0x300005
  2643                           ;	CCP2 MUX bit
  2644                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2645                           ;	PORTB A/D Enable bit
  2646                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2647                           ;	Low-Power Timer1 Oscillator Enable bit
  2648                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2649                           ;	MCLR Pin Enable bit
  2650                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2651   300005                     	org	3145733
  2652   300005  81                 	db	129
  2653                           
  2654                           ;Config register CONFIG4L @ 0x300006
  2655                           ;	Stack Full/Underflow Reset Enable bit
  2656                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2657                           ;	Single-Supply ICSP Enable bit
  2658                           ;	LVP = OFF, Single-Supply ICSP disabled
  2659                           ;	Extended Instruction Set Enable bit
  2660                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2661                           ;	Background Debugger Enable bit
  2662                           ;	DEBUG = 0x1, unprogrammed default
  2663   300006                     	org	3145734
  2664   300006  81                 	db	129
  2665                           
  2666                           ; Padding undefined space
  2667   300007                     	org	3145735
  2668   300007  FF                 	db	255
  2669                           
  2670                           ;Config register CONFIG5L @ 0x300008
  2671                           ;	Code Protection bit
  2672                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2673                           ;	Code Protection bit
  2674                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2675                           ;	Code Protection bit
  2676                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2677                           ;	Code Protection bit
  2678                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2679   300008                     	org	3145736
  2680   300008  0F                 	db	15
  2681                           
  2682                           ;Config register CONFIG5H @ 0x300009
  2683                           ;	Boot Block Code Protection bit
  2684                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2685                           ;	Data EEPROM Code Protection bit
  2686                           ;	CPD = OFF, Data EEPROM not code-protected
  2687   300009                     	org	3145737
  2688   300009  C0                 	db	192
  2689                           
  2690                           ;Config register CONFIG6L @ 0x30000A
  2691                           ;	Write Protection bit
  2692                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2693                           ;	Write Protection bit
  2694                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2695                           ;	Write Protection bit
  2696                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2697                           ;	Write Protection bit
  2698                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2699   30000A                     	org	3145738
  2700   30000A  0F                 	db	15
  2701                           
  2702                           ;Config register CONFIG6H @ 0x30000B
  2703                           ;	Configuration Register Write Protection bit
  2704                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2705                           ;	Boot Block Write Protection bit
  2706                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2707                           ;	Data EEPROM Write Protection bit
  2708                           ;	WRTD = OFF, Data EEPROM not write-protected
  2709   30000B                     	org	3145739
  2710   30000B  E0                 	db	224
  2711                           
  2712                           ;Config register CONFIG7L @ 0x30000C
  2713                           ;	Table Read Protection bit
  2714                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2715                           ;	Table Read Protection bit
  2716                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2717                           ;	Table Read Protection bit
  2718                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2719                           ;	Table Read Protection bit
  2720                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2721   30000C                     	org	3145740
  2722   30000C  0F                 	db	15
  2723                           
  2724                           ;Config register CONFIG7H @ 0x30000D
  2725                           ;	Boot Block Table Read Protection bit
  2726                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2727   30000D                     	org	3145741
  2728   30000D  40                 	db	64
  2729                           tosu	equ	0xFFF
  2730                           tosh	equ	0xFFE
  2731                           tosl	equ	0xFFD
  2732                           stkptr	equ	0xFFC
  2733                           pclatu	equ	0xFFB
  2734                           pclath	equ	0xFFA
  2735                           pcl	equ	0xFF9
  2736                           tblptru	equ	0xFF8
  2737                           tblptrh	equ	0xFF7
  2738                           tblptrl	equ	0xFF6
  2739                           tablat	equ	0xFF5
  2740                           prodh	equ	0xFF4
  2741                           prodl	equ	0xFF3
  2742                           indf0	equ	0xFEF
  2743                           postinc0	equ	0xFEE
  2744                           postdec0	equ	0xFED
  2745                           preinc0	equ	0xFEC
  2746                           plusw0	equ	0xFEB
  2747                           fsr0h	equ	0xFEA
  2748                           fsr0l	equ	0xFE9
  2749                           wreg	equ	0xFE8
  2750                           indf1	equ	0xFE7
  2751                           postinc1	equ	0xFE6
  2752                           postdec1	equ	0xFE5
  2753                           preinc1	equ	0xFE4
  2754                           plusw1	equ	0xFE3
  2755                           fsr1h	equ	0xFE2
  2756                           fsr1l	equ	0xFE1
  2757                           bsr	equ	0xFE0
  2758                           indf2	equ	0xFDF
  2759                           postinc2	equ	0xFDE
  2760                           postdec2	equ	0xFDD
  2761                           preinc2	equ	0xFDC
  2762                           plusw2	equ	0xFDB
  2763                           fsr2h	equ	0xFDA
  2764                           fsr2l	equ	0xFD9
  2765                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        42
    BSS         9
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     20      72
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    button_init@btn	PTR const struct . size(1) Largest target is 3
		 -> btn_high(COMRAM[3]), btn_low(COMRAM[3]), 

    button_read_state@btn	PTR const struct . size(1) Largest target is 3
		 -> btn_high(COMRAM[3]), 

    button_read_state@btn_state	PTR enum E2992 size(1) Largest target is 1
		 -> btn_high_status(COMRAM[1]), 

    gpio_pin_direction_init@_pin_config	PTR const struct . size(1) Largest target is 3
		 -> btn_high(COMRAM[3]), btn_low(COMRAM[3]), led_init@pin_obj(COMRAM[1]), 

    gpio_pin_init@_pin_config	PTR const struct . size(1) Largest target is 1
		 -> led_init@pin_obj(COMRAM[1]), 

    gpio_pin_read_logic@_pin_config	PTR const struct . size(1) Largest target is 3
		 -> btn_high(COMRAM[3]), 

    gpio_pin_read_logic@logic	PTR enum E2932 size(1) Largest target is 1
		 -> button_read_state@pin_logic_status(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 1
		 -> led_init@pin_obj(COMRAM[1]), led_off@pin_obj(COMRAM[1]), led_on@pin_obj(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BIGSFR[1]), LATB(BIGSFR[1]), LATC(BIGSFR[1]), LATD(BIGSFR[1]), 
		 -> LATE(BIGSFR[1]), 

    led_init@led	PTR const struct . size(1) Largest target is 1
		 -> led1(COMRAM[1]), led2(COMRAM[1]), 

    led_off@led	PTR const struct . size(1) Largest target is 1
		 -> led1(COMRAM[1]), 

    led_on@led	PTR const struct . size(1) Largest target is 1
		 -> led1(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BIGSFR[1]), PORTB(BIGSFR[1]), PORTC(BIGSFR[1]), PORTD(BIGSFR[1]), 
		 -> PORTE(BIGSFR[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BIGSFR[1]), TRISB(BIGSFR[1]), TRISC(BIGSFR[1]), TRISD(BIGSFR[1]), 
		 -> TRISE(BIGSFR[1]), 


Critical Paths under _main in COMRAM

    _main->_program2
    _main->_program3
    _program3->_led_off
    _program3->_led_on
    _program2->_led_off
    _program2->_led_on
    _program1->_led_off
    _program1->_led_on
    _led_on->_gpio_pin_write_logic
    _led_off->_gpio_pin_write_logic
    _button_read_state->_gpio_pin_read_logic
    _application_init->_led_init
    _led_init->_gpio_pin_init
    _gpio_pin_init->_gpio_pin_direction_init
    _gpio_pin_init->_gpio_pin_write_logic
    _button_init->_gpio_pin_direction_init

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     2      4    3181
                                             14 COMRAM     6     2      4
                   _application_init
                  _button_read_state
                           _program1
                           _program2
                           _program3
 ---------------------------------------------------------------------------------
 (1) _program3                                             4     4      0     646
                                             10 COMRAM     4     4      0
                            _led_off
                             _led_on
 ---------------------------------------------------------------------------------
 (1) _program2                                             4     4      0     646
                                             10 COMRAM     4     4      0
                            _led_off
                             _led_on
 ---------------------------------------------------------------------------------
 (1) _program1                                             2     2      0     600
                                             10 COMRAM     2     2      0
                            _led_off
                             _led_on
 ---------------------------------------------------------------------------------
 (2) _led_on                                               4     3      1     300
                                              7 COMRAM     3     2      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _led_off                                              4     3      1     300
                                              7 COMRAM     3     2      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _button_read_state                                    5     3      2     414
                                              6 COMRAM     5     3      2
                _gpio_pin_read_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_read_logic                                  7     5      2     120
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _application_init                                     0     0      0     875
                        _button_init
                           _led_init
 ---------------------------------------------------------------------------------
 (2) _led_init                                             4     3      1     623
                                              9 COMRAM     4     3      1
                      _gpio_pin_init
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_init                                        3     2      1     469
                                              7 COMRAM     2     1      1
            _gpio_pin_direction_init
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_write_logic                                 8     6      2     169
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) _button_init                                          2     1      1     252
                                              7 COMRAM     2     1      1
            _gpio_pin_direction_init
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_init                              7     6      1     181
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_init
     _button_init
       _gpio_pin_direction_init
     _led_init
       _gpio_pin_init
         _gpio_pin_direction_init
         _gpio_pin_write_logic
   _button_read_state
     _gpio_pin_read_logic
   _program1
     _led_off
       _gpio_pin_write_logic
     _led_on
       _gpio_pin_write_logic
   _program2
     _led_off
     _led_on
   _program3
     _led_off
     _led_on

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3967      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK15          128      0       0      0.0%
BANK15             128      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      0       0      0.0%
BITCOMRAM          127      0       0      0.0%
COMRAM             127     20      72     56.7%
BITBIGSFRh         118      0       0      0.0%
BITBIGSFRl           4      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      72      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sun May 04 18:56:46 2025

                                 l9 1788                                  l14 1326  
                                l15 13AE                                  l24 13B0  
                                l40 14BE                                  l33 1456  
                                l51 157C                                  l44 1512  
                                l37 14A8                                  l47 1528  
                               l110 1036                                 l103 167A  
                               l105 169C                                 l117 1110  
                               l141 13E2                                 l143 143A  
                               l223 1648                                 l136 1216  
                               l129 1142                                 l218 16DA  
                               l251 1764                                 l228 15E2  
                               l237 12FC                                 u500 1016  
                               u501 1012                                 u510 1036  
                               u511 1032                                 u600 167A  
                               u601 1676                                 u610 1776  
                               u611 1772                                 u540 10F8  
                               u524 105A                                 u620 13C2  
                               u541 10F2                                 u525 1056  
                               u621 13BE                                 u534 10B0  
                               u550 1122                                 u630 13E2  
                               u710 1316                                 u535 10AC  
                               u551 111E                                 u631 13DE  
                               u711 1312                                 u560 1142  
                               u720 1326                                 u800 1254  
                               u561 113E                                 u721 1322  
                               u705 156E                                 u801 1250  
                               u546 10FA                                 u650 1450  
                               u730 1352                                 u810 1278  
                               u651 144C                                 u731 134E  
                               u707 1570                                 u811 1274  
                               u644 142E                                 u740 1362  
                               u820 128C                                 u645 142A  
                               u741 135E                                 u821 1288  
                               u574 1164                                 u590 165A  
                               u750 1396                                 u670 14BA  
                               u830 12A0                                 u575 1160  
                               u591 1656                                 u751 1392  
                               u671 14B6                                 u831 129C  
                               u584 11BA                                 u760 13A6  
                               u585 11B6                                 u665 149C  
                               u761 13A2                                 u690 1524  
                               u770 1648                                 u667 149E  
                               u691 1520                                 u771 1644  
                               u780 15E2                                 u685 1504  
                               u781 15DE                                 u790 123A  
                               u687 1506                                 u847 1598  
                               u791 1236                                 u857 15B6  
                               u867 15FE                                 u877 161C  
                               u887 16B0                                 u897 16CE  
                               _ret 0048                                 wreg 0FE8  
                       led_on@F3017 0046                                l1301 14C2  
                              l1231 1092                                l1311 1514  
                              l1303 14F4                                l1233 10E2  
                              l1225 1002                                l1241 1122  
                              l1321 1570                                l1313 1524  
                              l1305 14F6                                l1401 125A  
                              l1235 110E                                l1227 1016  
                              l1243 1146                                l1331 132C  
                              l1315 152C                                l1307 1506  
                              l1411 12A0                                l1403 1266  
                              l1229 103C                                l1261 1766  
                              l1245 119C                                l1253 164A  
                              l1341 137C                                l1333 1338  
                              l1325 1304                                l1317 155E  
                              l1413 12A8                                l1405 1278  
                              l1263 1766                                l1247 11EC  
                              l1239 1112                                l1255 165A  
                              l1343 1396                                l1335 1352  
                              l1327 1306                                l1319 1560  
                              l1415 12B0                                l1423 12C8  
                              l1407 127C                                l1265 1776  
                              l1257 167E                                l1281 143C  
                              l1273 13B2                                l1337 1362  
                              l1329 1316                                l1353 169E  
                              l1417 12B8                                l1409 128C  
                              l1267 177C                                l1291 149E  
                              l1283 1450                                l1275 13C2  
                              l1339 136E                                l1355 16A6  
                              l1371 1628                                l1419 12C0  
                              l1269 1786                                l1285 145A  
                              l1293 14A6                                l1277 13E6  
                              l1349 13AA                                l1357 16BC  
                              l1365 15EC                                l1381 158E  
                              l1373 157E                                l1437 12DE  
                              l1439 1200                                l1287 148C  
                              l1367 15F4                                l1359 15E4  
                              l1383 15A4                                l1391 121C  
                              l1289 148E                                l1297 14AA  
                              l1369 160A                                l1385 15C2  
                              l1393 122A                                l1387 173C  
                              l1299 14BA                                l1379 1586  
                              l1395 123A                                l1397 123E  
                              l1389 1218                                l1399 1254  
                    _btn_low_status 0021                                _LATA 0F89  
                              _LATB 0F8A                                _LATC 0F8B  
                              _LATD 0F8C                                _LATE 0F8D  
                              _led1 002A                                _led2 0029  
    gpio_pin_read_logic@_pin_config 002B                                _main 1218  
                              fsr1h 0FE2                                fsr2h 0FDA  
                              indf1 0FE7                                indf2 0FDF  
                              fsr1l 0FE1                                fsr2l 0FD9  
          ?_gpio_pin_direction_init 002B                                prodl 0FF3  
                              start FFFC                         led_init@led 0034  
                       led_init@ret 0036                        ___param_bank 0000  
              _gpio_pin_write_logic 1112                               ?_main 0039  
                      led_off@F3022 0045                               _PORTA 0F80  
                             _PORTB 0F81                               _PORTC 0F82  
                             _PORTD 0F83                               _PORTE 0F84  
                             _TRISA 0F92                               _TRISB 0F93  
                             _TRISC 0F94                               _TRISD 0F95  
                             _TRISE 0F96                        ?_button_init 0032  
                   __end_of_led_off 157E                               tablat 0FF5  
                             status 0FD8                     __initialization 16DC  
                      __end_of_main 1304               ?_gpio_pin_write_logic 002B  
          gpio_pin_read_logic@logic 002C                       _lat_registers 000B  
                            ??_main 003D                       __activetblptr 0002  
                 _button_read_state 1304                     _ProgramSelected 003F  
                ?_button_read_state 0031                 ??_button_read_state 0033  
                  __end_of_led_init 14AA                       _gpio_pin_init 164A  
                            _led_on 14AA                              clear_0 1702  
                            isa$std 0001                           ??_led_off 0033  
                     led_init@F3012 0047                        __pdataCOMRAM 0001  
                     led_on@pin_obj 0034                        __mediumconst 1000  
         __end_of_button_read_state 13B2                              tblptrh 0FF7  
                            tblptrl 0FF6                              tblptru 0FF8  
                  __end_of_program1 16DC                    __end_of_program2 164A  
                  __end_of_program3 15E4                          __accesstop 0080  
           __end_of__initialization 1708                       ___rparam_used 0001  
            ??_gpio_pin_write_logic 002D                      __pcstackCOMRAM 002B  
                  _application_init 173C                      ?_gpio_pin_init 0032  
                        __pnvCOMRAM 0048  gpio_pin_direction_init@_pin_config 002B  
              button_read_state@btn 0031                button_read_state@ret 0034  
                           ?_led_on 0032                     led_toggle@F3027 0044  
                         ?_led_init 0034                      _tris_registers 0015  
                           __Hparam 0000                             __Lparam 0000  
                   ??_gpio_pin_init 0033                           ?_program1 002B  
                         ?_program2 002B                           ?_program3 002B  
               _gpio_pin_read_logic 13B2                        __psmallconst 1000  
             _btn_high_valid_status 0020                             __pcinit 16DC  
                           __ramtop 1000                             __ptext0 1218  
                           __ptext1 157E                             __ptext2 15E4  
                           __ptext3 169E                             __ptext4 14AA  
                           __ptext5 1514                             __ptext6 1304  
                           __ptext7 13B2                             __ptext8 173C  
                           __ptext9 143C                             _led_off 1514  
                           _btn_low 0022                ?_gpio_pin_read_logic 002B  
                        ??_led_init 0035                end_of_initialization 1708  
                     __Lmediumconst 0000                      led_off@pin_obj 0034  
                           postdec1 0FE5                             postdec2 0FDD  
                        ??_program1 0035                          ??_program2 0035  
                           postinc0 0FEE                          ??_program3 0035  
                           postinc1 0FE6                             postinc2 0FDE  
        button_read_state@btn_state 0032               ??_gpio_pin_read_logic 002D  
          __end_of_application_init 1766                          led_off@led 0032  
           _gpio_pin_direction_init 1002                       __pidataCOMRAM 1712  
                    __end_of_led_on 1514                 start_initialization 16DC  
                          ??_led_on 0033                       ??_button_init 0033  
                       __pbssCOMRAM 003F                         _led1_status 0043  
          gpio_pin_init@_pin_config 0032          _btn_high_last_valid_status 001F  
         ??_gpio_pin_direction_init 002C     gpio_pin_write_logic@_pin_config 002B  
 button_read_state@pin_logic_status 0035           gpio_pin_write_logic@logic 002C  
                          ?_led_off 0032                         __smallconst 1000  
               __end_of_button_init 178A               __end_of_gpio_pin_init 169E  
                         led_on@led 0032     __end_of_gpio_pin_direction_init 1112  
                 ?_application_init 002B                           copy_data0 16F0  
                ??_application_init 0038                            __Hrparam 0000  
                          __Lrparam 0000         __end_of_gpio_pin_read_logic 143C  
                    button_init@btn 0032                      button_init@ret 0033  
                       _button_init 1766                            __ptext10 164A  
                          __ptext11 1112                            __ptext12 1766  
                          __ptext13 1002                            _btn_high 0025  
                          _led_init 143C                            isa$xinst 0000  
                          _program1 169E                            _program2 15E4  
                          _program3 157E                            main@argc 0039  
                          main@argv 003B                           program2@i 0037  
                         program3@i 0037                     _btn_high_status 0028  
      __end_of_gpio_pin_write_logic 1218                      _btn_high_valid 0041  
                    _port_registers 0001          gpio_pin_direction_init@ret 0031  
                   led_init@pin_obj 0037  
